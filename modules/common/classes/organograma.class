<?php
/**
 * Brief Class Description.
 * Complete Class Description.
 * 
 * @author UFJF-CGCO
 * @access public
 *
 */
class BusinessCommonOrganograma extends MBusiness
{
    var $idTipoOrganograma;
    var $idSetor;
    var $idSetorPai;
    var $tipoOrganograma;
    var $setor;
    var $setorPai; 
	
    /**
	 * Constructor
	 *
	 * BusinessCommonOrganograma Class Constructor 
	 * @param $data (tipo) desc
	 */
    function __construct($data=null)
    {
       parent::__construct('common',$data);
    }
	
    
    /**
	 * Método utilizado para setar os atributos do objeto.
	 *
	 * @name setData
	 * @param $data (tipo) parametro que contem os dados do objeto.
	 * @return void
	 * @access public
	 */
	function setData($data)
	{
		$this->idTipoOrganograma = $data->idTipoOrganograma;
		$this->idSetor           = $data->idSetor;
		$this->idSetorPai        = $data->idSetorPai;
	}
	
	
	/**
	 * Método que busca um organograma no banco com o id passado e o retorna.
	 *
	 * @name getById
	 * @param $id (tipo) id do organograma para buscar no banco. 
	 * @return (object) Retorna uma um objeto da própria classe.
	 * @access public
	 */
    function getById($idTipoOrganograma, $idSetor)
    {
       $this->idTipoOrganograma = $idTipoOrganograma;
       $this->idSetor           = $idSetor;
       $this->retrieve();
       return $this;
    }
	
    
    /**
	 * Método que lista organogramas de determinado tipo.
	 *
	 * @name listByIdTipo
	 * @param $id (tipo) id do tipo de organograma para buscar no banco. 
	 * @return (tipo) Retorna uma lista com os resultados que vieram do banco.
	 * @access public
	 */
    function listByIdTipo($idTipoOrganograma)
    {
        $criteria = $this->getCriteria();
        $criteria->addCriteria('idTipoOrganograma','=',$idTipoOrganograma);//$criteria->addCriteria('idTipoOrganograma','=',"'$idTipoOrganograma%'");
        $query = $criteria->retrieveAsQuery();$criteria->addCriteria('idTipoOrganograma','=',"'$idTipoOrganograma%'");
        return $query;
    }

    
    /**
	 * Método que lista organogramas de determinado tipo.
	 *
	 * @name listByTipo
	 * @param $tipoOrganograma (tipo) tipo de organograma para buscar no banco. 
	 * @return (tipo) Retorna uma lista com os resultados que vieram do banco.
	 * @access public
	 */
    function listByTipo($tipoOrganograma)
    {
        $criteria = $this->getCriteria();
        $criteria->addCriteria('tipoorganograma.tipoOrganograma','=',"'$tipoOrganograma%'");
        $query = $criteria->retrieveAsQuery();
        return $query;
    }
	
    
    /**
	 * Método que lista organogramas de determinado setor.
	 *
	 * @name listByIdSetor
	 * @param $isSetor (tipo) id do setor para buscar no banco. 
	 * @return (tipo) Retorna uma lista com os resultados que vieram do banco.
	 * @access public
	 */
    function listByIdSetor($idSetor)
    {
        $criteria = $this->getCriteria();
        $criteria->addColumnAttribute('idTipoOrganograma');
        $criteria->addColumnAttribute('setorPai.sigla');
        $criteria->addColumnAttribute('setorPai.idSetor');
        $criteria->addCriteria('idSetor','=',$idSetor);
        $query = $criteria->retrieveAsQuery();
        return $query;
    }
	
    
    /**
	 * Método que deleta organogramas de determinado setor.
	 *
	 * @name deleteByIdSetor
	 * @param $isSetor (tipo) id do setor para buscar no banco. 
	 * @return void
	 * @access public
	 */
    function deleteByIdSetor($idSetor)
    {
        $criteria = $this->getDeleteCriteria();
        $criteria->addCriteria('idSetor','=',$idSetor);
        $criteria->delete();
    }
    
    
    /**
	 * Método que lista organogramas que o pai pertence a determinado setor.
	 *
	 * @name listByIdSetorPai
	 * @param $isSetor (tipo) id do setor do pai para buscar no banco. 
	 * @return (tipo) Retorna uma lista com os resultados que vieram do banco.
	 * @access public
	 */
    function listByIdSetorPai($idSetorPai)
    {
        $criteria = $this->getCriteria();
        $criteria->addColumnAttribute('idSetor');
        $criteria->addCriteria('setorPai.idSetor','=',$idSetorPai);
        $query = $criteria->retrieveAsQuery();
        return $query;
    }
    
    
    /**
	 * Brief Description
	 * Complete Description
	 *
	 * @name listByOrg
	 * @param $isSetor (tipo) id do setor para buscar no banco. 
	 * @return void
	 * @access public
	 */
    function listByOrg($idSetor)
    {
    	
    	$arrSetores = $this->listByIdSetorPai($idSetor);
    	//var_dump($arrSetores->result);
    	if ( is_array($arrSetores->result) ) 
	    	foreach ($arrSetores->result as $setor)
	    	{
	    		//var_dump($setor[0]);
	    		$this->listByOrg($setor[0]);
	    	}
    }

}
?>