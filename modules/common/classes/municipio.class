<?

class BusinessCommonMunicipio extends MBusiness
{
   var $idMunicipio;    // este campo encontra-se com espaço no final do dado do banco
   var $municipio;
   var $idUF;   // este campo encontra-se com espaço no final do dado do banco
   var $UF;
   var $idPais;
   var $pais;
   var $categoriaDiaria;
   var $populacao;
 
	function __construct($data=null)
	{
       parent::__construct('common',$data);
    }

    function SetData($data)
   
    {
    //   $this->idMunicipio = $data->idMunicipio;
       $this->municipio = strtoupper($data->municipio);
       $this->idPais = $data->idPais;
       $this->idUF = $data->idUF;
       $this->categoriaDiaria = $data->categoriaDiaria;
       $this->populacao = $data->populacao;
    }

    function Insert()
    {   global $MIOLO;
        $sql = new sql('idmunicipio, municipio, iduf,categoriadiaria,populacao','cm_municipio');
        $args = array(
    		$this->idMunicipio,
		    strtoupper($this->municipio),
            $this->idUF,
	$this->categoriaDiaria,
	$this->populacao
        );
        $ok = $this->Execute($sql->Insert($args));
        if ($ok) {$this->Log(OP_INS,"idmunicipio = $this->idmunicipio");} 
        return $ok;
    }

    function Update()
    {
        $sql = new sql('municipio, iduf,categoriadiaria,populacao','cm_municipio','idmunicipio = ?');
        $args = array(
		    strtoupper($this->municipio),
            $this->idUF,
	$this->categoriaDiaria,
	$this->populacao,
    		$this->idMunicipio,
        );
        $ok = $this->Execute($sql->Update($args));
        if ($ok) {$this->Log(OP_UPD,"idmunicipio = $this->idmunicipio");} 
        return $ok;
    }
    
    function Delete()
    {
        $sql = new sql('','cm_municipio', 'idmunicipio = ?');
        $ok = $this->Execute( $sql->Delete($this->idMunicipio) );
        if ($ok) {$this->Log(OP_DEL,"idmunicipio = $this->idmunicipio");} 
        return $ok;
    }

    function ListRange($range=NULL)
    {
        $sql = new sql('idmunicipio, municipio, iduf', 'cm_municipio', '','municipio');
        $sql->SetRange($range); 
        $query = $this->Query($sql);
        return $query;
    }

	function ListAll()
    {
		return $this->ListRange();
    }

    function CountWhere($where='')
    {
        $sql = new sql('*','cm_municipio',$where);
        return $this->_db->Count($sql->Select());
    }

	function GetById($id)
    {
        $this->idMunicipio = $id;
        $this->retrieve();
        return $this;
   }

   function GetById2($id)
    {
       $this->idMunicipio = $id;
       $this->retrieve();
       return $this;
    }
    
    function GetIdByNomeEstado($municipio,$idUF)
    {
        $municipio = strtoupper($municipio);
        $idUF = strtoupper($idUF);
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('municipio','=',"'$municipio'");
        $criteria->addCriteria('idUF','=',"'$idUF'");
        return $this->retrieveFromCriteria($criteria);
    }
	function listByNome($nome)
	{
		$criteria = $this->getCriteria();
		$criteria->addCriteria('municipio', 'like', strtoupper("'%{$nome}%'"));
		return $criteria->retrieveAsQuery();
	}
        
        // metodo para corrigir falha no banco onde há Ids com espaço no final dificultando o update
        function getIdByIdTrim($idTrim) {
            $sql = new sql('idmunicipio', 'cm_municipio', "idmunicipio LIKE '%$idTrim%'");
        $query = $this->Query($sql);
        return $query->result[0][0];
        }
      

}
?>
