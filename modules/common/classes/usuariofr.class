<?php
class BusinessCommonUsuariofr extends MBusiness implements IUser
{
    var $usr_codigo;
    var $usr_senha;
    var $usr_nome;
    var $usr_login;
    
    function __construct($data=null)
    {
       parent::__construct('common',$data);
    }

    function GetName()
    {
        return $this->usr_nome;
    }

    function GetId()
    {
        return $this->usr_codigo;
    }
    function GetById($id)
    {
      $this->usr_codigo = $id;
      $this->retrieve();
      return $this;
    }

    function GetByLogin($login)
    {
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('usr_login','=', "'$login'");
        $this->retrieveFromCriteria($criteria);
        return $this;
    }

    function GetByLoginPass($login,$pass)
    {
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('usr_login','=', "'$login'");
        $criteria->addCriteria('usr_senha','=', "'$pass'");
        $this->retrieveFromCriteria($criteria);
        return $this;
    }




    function GetTransactionRights($trans,$login=NULL)
    {
        if (is_null($login))
        {
            $login = $this->login;
        }
        $trans = strtoupper($trans);
        $rights = 0;
        $criteria =  $this->getCriteria();
        $criteria->AddColumnAttribute('max(grupos.acesso.direito)','direito');
        $criteria->addCriteria('login','=', "'$login'");
        $criteria->addCriteria('grupos.acesso.transacao.transacao','=', "'$trans'");
        $query = $criteria->retrieveAsQuery();
        if ( $query )
        {
            $rights = $query->fields('direito');
        }
        return $rights;
    }

    function GetRights()
    {
        $criteria =  $this->getCriteria();
        $criteria->AddColumnAttribute('grupos.acesso.transacao.transacao');
        $criteria->AddColumnAttribute('max(grupos.acesso.direito)','direito');
        $criteria->addCriteria('login','=', "'{$this->login}'");
        $criteria->addGroupAttribute('grupos.acesso.transacao.transacao');
        $query = $criteria->retrieveAsQuery();
        return $query->chunkResult(0,1,false);
    }


    function GetArrayGroups() // converte o array de objetos para um array de strings
    {
        $aGroups = array();
        $this->GetGroups();
        if (count($this->grupos))
        {
            foreach($this->grupos as $grupo)
            {
                $aGroups[$grupo->grupo] = $grupo->grupo;
            }
        }
        return $aGroups;
    }

    function getUsrCodigo($usr_codigo)
    {
        $criteria =  $this->getCriteria();
        $criteria->AddColumnAttribute('usr_codigo');
        $criteria->addCriteria('usr_codigo','=', "'$usr_codigo'");
        $result = $criteria->retrieveAsQuery();
        
        return $result->result[0][0];
    }

}
?>