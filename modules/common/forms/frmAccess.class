<?php
//class frmAccess extends MForm {
  class frmAccess extends CompoundForm {  

	public $pessoa;
	public $login;

	public function __construct($login) {
		$this->login = $login;
		//parent::__construct('Acesso');
                // 21-10-2011 - Daniel Bonfim
                parent::__construct(NULL);
		$this->EventHandler();
	}

	public function CreateFields() {
		$user = $this->manager->GetBusinessMAD('user');
		$user->GetByLogin($this->login->id);
		$this->pessoa = $user->pessoa;

		if ($user->CheckEmptyFields()) {
			$msgEmptyFields = '';
			$emptyFields = array();
			if ($user->pessoa->email == null) {
				$msgEmptyFields .= 'Confirme seu email institucional';
				$emptyFields[] = new MSpacer(2);
				$emptyFields[] = new MTextField('email','','Email',50);
				$emptyFields[] = new MSelection('tipo', '@ifbaiano.edu.br', ' ', array(
					'@ifbaiano.edu.br' => '@ifbaiano.edu.br',
					'@catu.ifbaiano.edu.br' => '@catu.ifbaiano.edu.br',
					'@guanambi.ifbaiano.edu.br' => '@guanambi.ifbaiano.edu.br',
					'@bonfim.ifbaiano.edu.br' => '@bonfim.ifbaiano.edu.br',
					'@si.ifbaiano.edu.br' => '@si.ifbaiano.edu.br',
					'@teixeira.ifbaiano.edu.br' => '@teixeira.ifbaiano.edu.br',
					'@lapa.ifbaiano.edu.br' => '@lapa.ifbaiano.edu.br',
					'@urucuca.ifbaiano.edu.br' => '@urucuca.ifbaiano.edu.br',
					'@valenca.ifbaiano.edu.br' => '@valenca.ifbaiano.edu.br',
					'@itapetinga.ifbaiano.edu.br' => '@itapetinga.ifbaiano.edu.br',
					'@mangabeira.ifbaiano.edu.br' => '@mangabeira.ifbaiano.edu.br',
				));
			}
			if ($user->pessoa->cpf == null) {
				if (empty($msgEmptyFields)) {
					$msgEmptyFields .= 'Confirme seu CPF';
				} else {
					$msgEmptyFields .= ' e CPF';
				}
				$emptyFields[] = new MSpacer(2);
				$emptyFields[] = new MTextField('cpf','','CPF',11);
			}
			$emptyFields[] = new MSpacer(2);
			$emptyFields[] = new MText('', $msgEmptyFields . ' para recuperação de senha, em caso de perda.');
		}
		if ($lastaccess = $login->lastaccess) {
			$msgAccess = "Seu último acesso ocorreu em $lastaccess[0] às $lastaccess[1] ($lastaccess[2])";
		}

		$ui = $this->manager->getUI();
		$close = $this->manager->getActionUrl('common','logout');
                
                // 21-10-2011 - Daniel Bonfim
                
                // form do menu principal
                $this->_form[0] = $frmMenu = $this->manager->GetUI()->GetForm('common',"frmMain2");  

				$this->_form[1] = $frmProcessosSetorUser3 = $this->manager->GetUI()->GetForm('protocolo',"frmProcessosSetorUser3", $user, 'processos');
                $this->_form[2] = $frmProcessosSetorUser1 = $this->manager->GetUI()->GetForm('protocolo',"frmProcessosSetorUser1", $user, 'processos');
                $this->_form[3] = $frmProcessosSetorUser2 = $this->manager->GetUI()->GetForm('protocolo',"frmProcessosSetorUser2", $user, 'processos');
                //$frmProcessosSetorUser->SetClose($this->manager->GetActionURL('protocolo','main:processos',$this->processo->numProcesso));
            //$this->page->SetAction($this->manager->history->Top('action'));
                
                
		/* Tela de apresentação
                $fields = Array(
			new MText('','Bem vindo(a), ' . $user->nick),
			new MText('',$msgAccess),
			new MText('','<b>ATEN&Ccedil;&Atilde;O</b>: N&atilde;o deixe de encerrar sua sess&atilde;o (clicando em Sair) antes de fechar a janela do seu browser.'),
			new MSpacer(2),
			$emptyFields,
		);
                 
		
                $this->SetFields($fields);
                 * 
                 */

		/*
		Inicio de mensagens de eventuais pendências na biblioteca
		$emprestimo = $this->manager->getBusiness('biblioteca','emprestimo');
		$qryEmprestimo = $emprestimo->ListEmprestimosIrregularesPorUsuario($user->idUsuario);
		if (!$qryEmprestimo->eof()) {
			$msg = TRUE;
		}
		$multa = $this->manager->getBusiness('biblioteca','multa');
		$qryMulta = $multa->ListMultasNaoPagas($user->idUsuario);
		if (!$qryMulta->eof()) {
			$msg = TRUE;
		}
		if ($msg) {
			$this->addInfo('Caro usuário, entre em contato com a biblioteca universitária para regularizar sua situação.');
		}

		// Verifica se existem reservas atendidas

		$reserva = $this->manager->getBusiness('biblioteca','reserva');
		$reservasAtendidades = $reserva->ListReservasAtendidas($user->idUsuario);

		if ($reservasAtendidades->result) {
			$this->addInfo("Caro usuário, existem reservas atendidas em seu nome.");
		}
		Fim das mensagens da biblioteca
		*/

                // **** esse tipo de formulario nao suporta botoes com eventos
		/*$buttons = array(
			new MButton('btnMain','&nbsp;&nbsp;&nbsp;Ok&nbsp;&nbsp;&nbsp;')
		);
		$this->SetButtons($buttons);
                 * 
                 */
			
		
	}

	public function btnMain_click() {
            var_dump("entrou no evento");exit;

		global $MIOLO, $page;

		$go = $MIOLO->GetActionURL('common', 'main:main2');
		$update = false;

		if ($this->GetFieldValue('email') != null) {
			$this->pessoa->email = $this->GetFieldValue('email') . $this->GetFieldValue('tipo');
			$update = true;
		}
		if ($this->GetFieldValue('cpf') != null) {
			$this->pessoa->cpf = $this->GetFieldValue('cpf');
			$update = true;
		}

		if ($update) {
			$result = $this->pessoa->Update();
			if ($result) {
				$MIOLO->Information('Dados atualizados com sucesso.', $go);
				return true;
			}
		} else {
			$this->page->redirect($go);
		}
	}
}
?>