<?
class frmInstituicaoDel extends MForm
{
	protected $objInstituicao;

	function __construct($objInstituicao)
	{
		$this->objInstituicao = $objInstituicao;
		parent::__construct('Excluir Instituição');
		$this->EventHandler();
	}

	function CreateFields()
	{
		global $MIOLO;

		$action_sim = $MIOLO->GetActionURL('common','main:instituicao',$this->objInstituicao->idinstituicao,array('form'=>'excluir','conf'=>'sim'));
		$action_nao = $MIOLO->GetActionURL('common','main:instituicao',$this->objInstituicao->idinstituicao);
		$conf = $this->GetFormValue('conf');

		if ($conf == 'sim')
		{
			try
			{
				$this->objInstituicao->Delete();
				$MIOLO->Information('Instituição excluída com sucesso',$MIOLO->GetActionURL('common','main:instituicao:find'));
			}
			catch ( Exception $e )
			{
				if( strstr($e, 'chave estrangeira'))
				{
					$MIOLO->Error("Não é possível remover a instituição porque outras partes do sistema dependem dela, no entanto, a mesma poderá ser desativada na seção de edição.", $MIOLO->GetActionURL('common','main:instituicao',$this->objInstituicao->idinstituicao));
				}
				else
				{
					$MIOLO->Error('Não foi possível remover a instituição, erro desconhecido.', $MIOLO->GetActionURL('common','main:instituicao:find'));
				}
			}
		}
		else
		{
			$MIOLO->Question("Tem certeza que deseja excluir a Instituição ".$this->objInstituicao->nome."?", $action_sim, $action_nao);
		}
	}
}
?>