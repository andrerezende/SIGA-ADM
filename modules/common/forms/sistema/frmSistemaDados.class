<?
class frmSistemaDados extends MForm
{
    protected $objSistema;

    function __construct($objSistema)
    {
        $this->objSistema = $objSistema;
		parent::__construct('Dados do Sistema');
        $this->EventHandler();
    }

    function CreateFields()
    {
	$fields = array(
		new MHiddenField('idSistema',''),
		new MTextField('sistema','','Nome','50','Máx. 50 caracteres'),
	);
		
        $this->SetFields($fields);
		
		$buttons = array(
			new MButton('btnSalvar', 'Salvar')
		);
		$this->SetButtons($buttons);

		$validators = array(
			new MRequiredValidator('idSistema'),
			new MRequiredValidator('sistema')
		);
		$this->SetValidators($validators);
        $this->setData();

    }

    function setData()
    {
        $data = $this->objSistema;
        $this->setFieldValue('idSistema',$data->idSistema);
        $this->setFieldValue('sistema',$data->sistema);
    }
    
	function btnSalvar_click()
	{
		
		if( strlen(trim(Form::GetFormValue('sistema'))) < 3 )
		{
			$this->AddError('O nome do sistema deve possuir pelo menos três caracteres.');
		}
		elseif( preg_match("/\W/", trim(Form::GetFormValue('sistema'))) )
		{
			$this->AddError('Informe um nome válido para o sistema.');
		}
		else
		{
			$this->objSistema->setData($this->getData());
			$this->objSistema->sistema = trim($this->objSistema->sistema);
			try
			{
				$this->objSistema->save();
				$this->manager->information('Sistema modificado com sucesso.',$this->manager->getActionUrl('common','main:sistema:find'));
			}
			catch ( Exception $e )
			{
				$this->AddError($e->getMessage());
			}
		}
	}

}
?>