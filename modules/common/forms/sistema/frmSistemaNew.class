<?
class frmSistemaNew extends MForm
{

	function __construct()
	{
		parent::__construct('Incluir Novo Sistema');
		$this->EventHandler();
	}

	function CreateFields()
	{
		$fields = array(
			//new MTextField('idSistema','','Código','4','Máx. 4 algarismos'),
			new MTextField('sistema','','Sistema','50','Máx. 50 caracteres'),
		);
		
		$this->SetFields($fields);
		
		$buttons = array(
			new MButton('btnNew', 'Incluir Sistema')
		);
		$this->SetButtons($buttons);

		$validators = array(
			//new MRequiredValidator('idSistema'),
			new MRequiredValidator('sistema')
		);
		$this->SetValidators($validators);
	}

	function btnNew_click()
	{
		if( strlen(trim(Form::GetFormValue('sistema'))) < 3 )
		{
			$this->AddError('O nome do sistema deve possuir pelo menos três caracteres.');
		}
		elseif( preg_match("/\W/", trim(Form::GetFormValue('sistema'))) )
		{
			$this->AddError('Informe um nome válido para o sistema.');
		}
		else
		{
			$data = $this->GetData();
			$sistema = $this->manager->GetBusiness('common','sistema');
			$sistema->SetData($data);

			$sistema->sistema = trim($sistema->sistema);

			if($sistema->isPersistent())
			{
				$this->addError('Código de sistema já existente.');
			}
			else
			{
				try 
				{
					$sistema->save();
					$this->manager->information('Sistema cadastrado com sucesso.',$this->manager->getActionUrl('common','main:sistema:find'));
				}
				catch ( Exception $e )
				{
					$this->addError($e->getMessage());
				}
			}
		}
	}

}
?>
