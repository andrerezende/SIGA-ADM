<?
class gridItensEmpenho extends MGrid
{
    function __construct($idEmpenho)
    {
        global $MIOLO, $page, $action;
        $objEmpenho = $MIOLO->getBusiness('adm','empenho',$idEmpenho);
        $objEmpenho->retrieveAssociation('empenhado');
        $cf = new MCurrencyFormatter();
        foreach ($objEmpenho->empenhado as $empenhado)
        {
            $dados[$empenhado->idEmpenhado][0] = $empenhado->idEmpenhado;
			$empenhado->retrieveAssociation('itemreq');
			if($empenhado->itemreq){
				$empenhado->itemreq[0]->retrieveAssociation('material');
				$dados[$empenhado->idEmpenhado][1] = $empenhado->itemreq[0]->material->descricao;
				$dados[$empenhado->idEmpenhado][2] = $empenhado->quantidadeEmp;
				$dados[$empenhado->idEmpenhado][3] = $cf->formatWithSymbol($empenhado->valorEmp);
			}else{
				var_dump($empenhado->idEmpenhado);
				var_dump($empenhado->itemServExt->idServico);
				$empenhado->itemServExt->retrieveAssociation('servico');
				$dados[$empenhado->idEmpenhado][1] = $empenhado->itemServExt->servico->descricao;
				$dados[$empenhado->idEmpenhado][2] = $empenhado->quantidadeEmp;
				$dados[$empenhado->idEmpenhado][3] = $cf->formatWithSymbol($empenhado->valorEmp);
			}
        }
        $columns = array(
            new MGridColumn('idEmpenhado','left',false,'',false),
            new MGridColumn('Material','left',false,'64%'),
            new MGridColumn('Quantidade','center',true,'18%'),
            new MGridColumn('Valor','center',true,'18%'),
			
        );
        $this->SetFilter(false);
        parent::__construct($dados,$columns,$action,30);
    }
    function GenerateHeader()
    {
        return null;
    }
    function GenarateFooter()
    {
        return null;
    }
}

?>