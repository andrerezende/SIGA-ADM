<?
/**
 * Grid Licitacao
 * Grid de uso geral para selecionar licitacao
 * @package br.org.miolo.ufjf.adm.grids
 */
/**
 * Use Module Control
 */
global $MIOLO;
$MIOLO->Uses('controls/linklicitacao.class','adm');

class gridLicitacoesVencidas extends MDataGrid
{

    /**
     * Constructor
     */
    function __construct($local="Todos")
    {
        global $MIOLO, $self;

        $linkLicitacao = new LinkLicitacao('linklicitacao','%0%');
        $columns = array(
            new DataGridControl($linkLicitacao,'licitacao','Número','center', true,'10%'),
           	new DataGridColumn('dataCriacao','Data Criação','center', true,'20%'),
           	new DataGridColumn('dataAbertura','Data Abertura','center', true,'20%'),
            new DataGridColumn('idTipoLicitacao','Tipo','center', true,'10%'),
            new DataGridColumn('status','Status','center', true,'40%')
         );

        $this->SetFilter(false);
        $filter = Form::GetFormValue('licitacao');
        $licitacao = empty($filter) ? '%' : $filter;

        $objLicitacao = $MIOLO->GetBusiness('adm','licitacao');
        $query = $objLicitacao->ListConcluidas();

        //$query = $objLicitacao->ListById(strtoupper("'$licitacao%'"));
        $href_grid = $MIOLO->GetActionURL('adm',$self);
        
        if ($local != "Todos")
		{
        	$query = $objLicitacao->filtraLicitacoes($query,$local);
		}
		
	

        parent::__construct($query, $columns, $href_grid,0);
        $this->AddFilterText('licitacao','Licitacao',$licitacao);
        $this->SetIndex(1);
		$this->SetRowMethod($this,'MyRowMethod');

    }

    // Método a ser executado antes de renderizar cada linha
    function MyRowMethod($i, $row, $actions, $columns)
    {
        if ($row[5] == '1')
            $tipo = "MAT";
        else if ($row[5] == '2')
            $tipo = "SERV";
        else
            $tipo = "LIVRO";       

		$columns["idTipoLicitacao"]->control[$i]->setValue($tipo);
    }   
}

