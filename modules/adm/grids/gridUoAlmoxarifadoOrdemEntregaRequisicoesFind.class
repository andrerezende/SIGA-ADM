<?
class gridUoAlmoxarifadoOrdemEntregaRequisicoesFind extends MObjectGrid
{
    protected $uoalmoxarifado;
    function __construct($objUo)
    {
        global $MIOLO, $page;
        $this->uoalmoxarifado = $objUo;
		$cf = new MCurrencyFormatter();
        $this->setTitle('Resultados encontrados');
        $href = $MIOLO->getActionURL('adm','main:uoalmoxarifado',$this->uoalmoxarifado->idUo,array('form'=>'ordementrega','idOrdemEntrega'=>'#0#'));
        $columns = array(
            new MObjectGridColumn('idOrdemEntrega','Número Ordem','','','',false),
            new MObjectGridHyperlink('numero','Número Ordem',$href,'8%'),
			new MObjectGridColumn('movimento[0]->idRequisicao','Número Requisição','center','true','12%'),
			new MObjectGridColumn('data','Data','center','true','13%'),
			new MObjectGridColumn('movimento[0]->itemNota->empenhado->empenho->numero','Número Empenho','center','true','14%'),
			new MObjectGridColumn('movimento[0]->requisicao->uoRequisitante->sigla','UO','center','true','13%'),
            new MObjectGridHyperlink('movimento[0]->requisicao->usuario->pessoa->nome','Requisitante',$href,'40%'),
			//new MGridColumn('Valor','center','true','16%'),
         );
        $this->setFilter(false);
        $numero = Form::getFormValue('numero');
        $idRequisicao = Form::getFormValue('idRequisicao');
        $requisitante = Form::getFormValue('requisitante');
        $dataInicio = Form::getFormValue('dataInicio');
        $dataFim = Form::getFormValue('dataFim');
        if ($dataInicio && $dataFim)
        {
            $ordens = $this->uoalmoxarifado->listOrdemEntregaForPeriodo($dataInicio,$dataFim);
        }
        elseif(is_numeric($numero) or is_numeric($idRequisicao)) 
        {
            $ordens = $this->uoalmoxarifado->listOrdemEntregaForAlmoxarifado($numero,$idRequisicao,$requisitante);
        }
	else
	{
	    $ordens = $this->uoalmoxarifado->listOrdemEntregaForAlmoxarifado($numero=null,$idRequisicao=null,$requisitante);
	}
        /*
        foreach ($requisicoes as $r)
        {
            $r->retrieveAssociation('materialAlmoxarifado');
            foreach ($r->materialAlmoxarifado as $m)
            {
                $m->retrieveAssociation('movimento');
                foreach ($m->movimento as $mo)
                {
                    if ($mo->tipoMovimento == 3) $r->idOrdemEntrega == $mo->idOrdemEntrega;
                }
            }
        }
        */
        $cf = new MCurrencyFormatter();
        /*
        if ( count($requisicoes) == 1 )
        {
            $page->redirect($MIOLO->getActionURL('adm','main:uoalmoxarifado:main',$this->uoalmoxarifado->idUo,array('form'=>'saidamaterial','idRequisicao'=>$requisicoes[0]->idRequisicao)));
        }
        */
        $href_grid = $MIOLO->getActionURL('adm','main:uoalmoxarifado',$this->uoalmoxarifado->idUo,array('form'=>'ordementrega'));
        parent::__construct($ordens, $columns, $href_grid,25);
        $this->SetLinkType('hyperlink');
        $this->with = '100%';
        //$href = $this->manager->GetActionURL('adm','main:empenho:new','', array('idEmpenho'=>'$id') );
    }
    /*
    function GenerateFooter()
    {
        $footer[] = new MSeparator();
        if ($dataInicio = Form::getFormValue('dataInicio') && $dataFim = Form::getFormValue('dataFim'))
        {
            $footer[] = new MButton('btnOrdemEntregaPorPeriodo','Consolidar as do Período');
        }
        else
        {
            $footer[] = new MButton('btnOrdemEntrega','Consolidar Todas');
        }
        return $footer;
    }
    */
}
