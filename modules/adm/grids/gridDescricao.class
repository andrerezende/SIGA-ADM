<?
/**
 * Grid Licitacao
 * Grid de uso geral para selecionar licitacao
 * @package br.org.miolo.ufjf.adm.grids
 */
/**
 * Use Module Control
 */
global $MIOLO;
$MIOLO->Uses('controls/linklicitacao.class','adm');

class gridDescricao extends MDataGrid
{

    /**
     * Constructor
     */
    function __construct()
    {
        global $MIOLO, $module, $page, $context, $self, $action, $state;
		$linkLicitacao = new LinkLicitacao('linklicitacao','%0%');
		
        //$linkLicitacao = new LinkLicitacao('linklicitacao','%0%');
        $columns = array(
		new MDataGridControl($linkLicitacao,'licitacao','Número','center', true,'20%'),
		new MDataGridColumn('quantidade','Quantidade','center', true,'10%'),
		new MDataGridColumn('valor','Valor','left', true,'10%'),
		new MDataGridColumn('status','Status','center', true,'25%'),
		new MDataGridColumn('instituicao','Fornecedor','center', true,'35%')
         );
		
        $this->SetFilter(false);
		
		//filtros
        $filterDesc = Form::GetFormValue('descricao');
		$filterCod  = Form::GetFormValue('codmaterial');
		$filterData = Form::GetFormValue('dataabertura');
		$filterTipo = Form::GetFormValue('tipo');

        $objMapaLicitacao = $MIOLO->GetBusiness('adm','mapalicitacao');
        $query = $objMapaLicitacao->ListLicitacaoByDescricao(strtoupper("'%$filterDesc%'"), $filterCod,$filterData,$filterTipo);

        $hrefgrid = $MIOLO->GetActionURL($module,$self);

        parent::__construct($query, $columns, $hrefgrid);
        $this->SetIndex(1);
		$this->SetRowMethod($this,'MyRowMethod');

    }

    // Método a ser executado antes de renderizar cada linha
    function MyRowMethod($i, $row, $actions, $columns)
    {
		switch ($row[4])
		{
		case '1':$tipo = "MONTADA"; break;
		case '2':$tipo = "PARTICIPANTES CADASTRADOS"; break;
		case '3':$tipo = "PROPOSTAS CADASTRADAS"; break;
		case '4':$tipo = "VENCEDORES DEFINIDOS"; break;
		case '5':$tipo = "EMPENHADA"; break;
		} 
		$columns["status"]->control[$i]->setValue($tipo);
		$cf = new MCurrencyFormatter();
		$row[6] = $cf->toDecimal($row[2]) *$cf->toDecimal($row[3]);
		$columns["valor"]->control[$i]->setValue($cf->formatWithSymbol($row[6],'REAL'));
    }	
}

