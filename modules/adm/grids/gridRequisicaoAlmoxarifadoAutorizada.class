<?
/**
 * Grid Uo
 * Grid para listar os materiais da requisição de almoxarifado
 * @package br.org.miolo.ufjf.adm.grids
 */
/**
 * Use Module Control
 */

class gridRequisicaoAlmoxarifadoAutorizada extends ObjectGrid
{
    protected $objRequisicao;
    function __construct($requisicao)
    {
        global $MIOLO;
        $this->objRequisicao = $requisicao;
        $tg = $MIOLO->getBusiness('common','tabelageral');
        $result = $tg->listByTabela('AD_STATUSITEMREQ','item1');
        foreach ($result->result as $s) $status[$s[0]] = $s[1];
        $columns = array(
            new ObjectGridColumn('quantPedida','Quant Pedida','center','','8%'),
            new ObjectGridColumn('quantAutorizada','Quant Autorizada','center','','8%'),
            new ObjectGridColumn('idMaterial','IdMaterial','','','',false),
            new ObjectGridColumn('material->unidade','Und','center','','5%'),
            new ObjectGridColumn('elemento','Elemento','','','7%'),
            new ObjectGridColumn('material->codmaterial','Material','','','8%'),
            new ObjectGridColumn('material->idsubelemento','Subitem','right','','8%'),
            new ObjectGridColumn('material->descricao','Material','','','55%'),
            new ObjectGridColumn('valorTotal','Valor Total','center','','8%'),
        );
		$href_grid = $MIOLO->GetActionURL('adm','main:requisicoes',$this->objRequisicao->idRequisicao,array('form'=>'item','tipoReq'=>$this->objRequisicao->idTipoReq));
        $cf = new MCurrencyFormatter();
        $this->objRequisicao->retrieveAssociation('materialAlmoxarifado');
        if ($this->objRequisicao->materialAlmoxarifado)
        {
            foreach ($this->objRequisicao->materialAlmoxarifado as $material)
            {
                $material->retrieveAssociation('material');
                $material->elemento = $material->material->idelemento.'.'.$material->material->idsubelemento;
                $material->valorTotal = round($cf->toDecimal($material->quantAutorizada) * $cf->toDecimal($material->valorReal),2);
                $material->valorTotal = $cf->formatWithSymbol($material->valorTotal);
            }
        }
        parent::__construct($this->objRequisicao->materialAlmoxarifado,$columns,$href_grid,0);
        $this->SetLinkType('hyperlink');
        $this->SetTitle('Lista de materiais requisitados');
        $this->SetClose(null);
    }
    function GenerateFooter()
    {
        global $MIOLO;
        $cf = new MCurrencyFormatter();
        if ($this->objRequisicao->materialAlmoxarifado)
        {
            foreach ($this->objRequisicao->materialAlmoxarifado as $material)
            {
                $total += $cf->toDecimal($material->valorTotal);
            }
        }
        $footer[] = new MTextTable('total', array(array("<b>VALOR TOTAL</b>","<span style=float:right><b>{$cf->formatWithSymbol($cf->toDecimal($total))}&nbsp;&nbsp;</b></span>")));
        return $footer;
    }
}

