<?
/**
 * Grid AcessoUoReq
 * Grid de uso geral para selecionar usuarios da uo
 * @package br.org.miolo.ufjf.adm.listing
 */

/**
 * Use Module Control
 */


class gridUoAcesso extends DataGrid2
{
    /**
     * Constructor
     */
    function __construct()
    {
        global $MIOLO, $module,$self,$item;

        if( ($item) && (Form::GetFormValue('id')) )
        {
            $Uo = trim($item);
            $idUserDelete = trim(Form::GetFormValue('id'));
        }
        else
        {
	        $Uo = Form::GetFormValue('selUos');
        }
        
		$nome = strtoupper(Form::GetFormValue('nome'));
        
        if( isset($Uo) && ($Uo>0))
        {  
            $objUo = $MIOLO->getBusiness('adm','uo');
            $objUo->getById($Uo);
            
            if( $idUserDelete )
            {
                $objUo->getUsuarios();
                
                try
                {
			        $objUo->DeleteUsuario($idUserDelete);
                    $objUo->Log(OP_INS,"Novo acesso relacionado à UO");
                }
                catch(Exception $e)
                {
                    $this->addError("Informe o seguinte erro a equipe do CGCO: ". $e->getMessage());
                }
                
                $objUo->getUsuarios();
            }
	
	
	    $query = $objUo->listUsuariosByNome($nome,$Uo);
            
	    $columns = array(
                new DataGridColumn('idusuario','Número','right', false,'0%',false),
                new DataGridColumn('login','Login','left', false,'10%',true),
                new DataGridColumn('nome','Nome','left', false,'90%',true),
            );
            $this->SetTitle(NULL);
            $this->SetFilter(false);
            $this->SetIndex(1);


            $href_grid = $MIOLO->GetActionURL($module,$self);
            parent::__construct($query, $columns, $href_grid,25);
            $this->SetWidth('100%');
            $this->SetLinkType('hyperlink');
            $action = $MIOLO->GetActionURL($module,$self,$objUo->idUo,array('id'=>'#0#'));
            $this->AddActionDelete($action);
        }
    }

    function GenerateHeader()
    {
        return NULL;
    }

    function GenerateFooter()
    {
        if (!$this->data) 
        $footer[] = $this->GenerateEmptyMsg();
        $footer[] = new Separator();
        $footer[] = $this->GenerateControls();
        return $footer;
    }
}
?>
