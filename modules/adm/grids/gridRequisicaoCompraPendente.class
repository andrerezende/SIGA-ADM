<?
/**
 * Grid Uo
 * Grid para listar os materiais da requisição de almoxarifado
 * @package br.org.miolo.ufjf.adm.grids
 */
/**
 * Use Module Control
 */

class gridRequisicaoCompraPendente extends ObjectGrid
{
    protected $objRequisicao;
    function __construct($requisicao)
    {
        global $MIOLO;
        $this->objRequisicao = $requisicao;
        $this->objRequisicao->getMaterialCompra(Form::getFormValue('idMaterial'));
        $columns = array(
            new ObjectGridColumn('idMaterial','IdMaterial','','','',false),
            new ObjectGridColumn('quantPedida','Quant Pedida','center','','5%'),
            new ObjectGridColumn('material->unidade','Und','center','','5%'),
            new ObjectGridColumn('material->codmaterial','Código','','','8%'),
            new ObjectGridColumn('material->descricao','Material','','','62%'),
            new ObjectGridColumn('precoEstimado','Valor Unitário','','','10%'),
            new ObjectGridColumn('valorTotalPedido','Valor Total','','','10%')
        );
		$href_grid = $MIOLO->GetActionURL('adm','main:requisicoes',$this->objRequisicao->idRequisicao,array('form'=>'item','tipoReq'=>$this->objRequisicao->idTipoReq));
        $cf = new MCurrencyFormatter();
        if ($this->objRequisicao->materialCompra)
        {
            foreach ($this->objRequisicao->materialCompra as $material)
            {
                $subtotal = round($cf->toDecimal($material->precoEstimado) * $cf->toDecimal($material->quantPedida),2);
                $material->precoEstimado = $cf->formatWithSymbol($cf->toDecimal($material->precoEstimado));
                $material->valorTotalPedido = $cf->formatWithSymbol($subtotal);
            }
        }
        parent::__construct($this->objRequisicao->materialCompra,$columns,$href_grid,0);
		$href_update = $MIOLO->GetActionURL('adm','main:requisicoes',$this->objRequisicao->idRequisicao,array('form'=>'novo','idMaterial'=>'%0%'));
		$this->AddActionUpdate($href_update);
        $this->SetLinkType('hyperlink');
        $this->SetTitle('Lista de materiais requisitados');
        $this->SetClose(null);
    }
    function GenerateFooter()
    {
        global $MIOLO;
        $cf = new MCurrencyFormatter();
        if ($this->objRequisicao->materialCompra)
        {
            foreach ($this->objRequisicao->materialCompra as $material)
            {
               //$valortotal += $cf->toDecimal($material->valorTotalPedido);
                $valortotal += (str_replace("R$","", str_replace( "," , ".", str_replace("." , "" , $material->valorTotalPedido))));
            }
        }
        else
        {
            $footer[] = $this->GenerateEmptyMsg();
        }
        $footer[] = new MTextTable('total', array(array("<b>VALOR TOTAL</b>","<span style=float:right><b>{$cf->formatWithSymbol($cf->toDecimal($valortotal))}&nbsp;&nbsp;</b></span>")));
        $footer[] = new MSpacer('5px');
        $footer[] = new MLink('new','Inserir Novo Material',$MIOLO->GetActionURL('adm','main:requisicoes',$this->objRequisicao->idRequisicao,array('form'=>'novo','idMaterial'=>'new')));
        $footer[] = new MSpacer('5px');
        return $footer;
    }

}

