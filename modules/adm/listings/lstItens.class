<?
class lstItens extends Grid
{
	function lstItens()
	{
		global $MIOLO, $module, $page, $context, $self, $action, $perms, $item, $state;

		// controle dentro do grid
	        $objItem = $MIOLO->GetBusiness('adm','item');
        	$qryItem = $objItem->ListItensByIdRequisicao();
		$quantitem = new TextField('quantidade','','Quantidade',10);	

		// link dentro do grid
		$href_trans = $MIOLO->GetActionURL('common','main:admin:transaction','#0#', array('event'=>'btnEdit:click'));

		// colunas
	        $columns = array(
        	   new GridColumn('Id','right', true, '',false),
	           new GridColumn('Item','left',false,'40%',true),
	           new GridColumn('Qtd. Pedida', 'center', true,'20%',true,'',false,true),
		   new GridColumn('Qtd. Disp.', 'center', true,'20%',true,'',false,true),
		   new GridControl($quantitem,'Qtd. Atendida', 'center', true, '20%',true,'',false,true)
        	);

		// instancia o grid
		$href_grid = $MIOLO->GetActionURL($module,$self);
	        $oTransacao = $MIOLO->GetBusiness('common','transacao');
        	$query = $oTransacao->ListAll();
	        parent::__construct($qryItem->result, $columns, $href_grid,15,0);

		// Qual a coluna que serve de indice do grid
        	$this->SetIndex(0);

		// Titulo do box
		$this->SetTitle('Relação de Itens da Requisição');

		// Método a ser executado antes de renderizar cada linha
	        $this->SetRowMethod('lstGrid3','MyRowMethod');

		// Executa os eventos
	        $this->EventHandler(); 
	}
}

?>
