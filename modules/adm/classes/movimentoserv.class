<?
class BusinessAdmMovimentoServ extends Business
{
	var $idMovimento;
	var $tipoMovimento;
	var $dataMovimento;
	var $quantidade;
	var $valorTotal;
	var $idRequisicao;
	var $idItemNota;
	var $idMovimentoRef;

	function __construct($data = null)
	{
		parent::__construct('sigaept', $data);
	}
	
    function getById($id)
	{
		$this->idMovimento = $id;
		$this->retrieve();
		return $this;
	}

	function GetQuantidadeByRequisicaoIdEmpenhado($idRequisicao, $idEmpenhado)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('sum(quantidade)');
		$criteria->addCriteria('itemNota.idEmpenhado', '=', "$idEmpenhado");
		$criteria->addCriteria('idRequisicao', '=', "$idRequisicao");
		$criteria->addCriteria('tipoMovimento','in', "('1','5')");
		$criteria->addCriteria('idMovimentoRef','is', "null");
		$query = $criteria->retrieveAsQuery();
		return $query->result[0][0];
	}

	function GetByIdItemNotaNaoEstornado($idItemNota)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('idMovimento');
		$criteria->addCriteria('idItemNota', '=', "$idItemNota");
		$criteria->addCriteria('idMovimentoRef','is', "null");
		$query = $criteria->retrieveAsQuery();
		$this->idMovimento = $query->result[0][0];
		$this->retrieve();
		return $this;
	}

	function GetByRequisicaoItemNotaTipo($requisicao,$idItemNota=null,$tipo=null)
	{
		$criteria = $this->getCriteria();
		$criteria->addCriteria('idRequisicao','=', "$requisicao");
		if($idItemNota)
		{
			$criteria->addCriteria('idItemNota','=', "$idItemNota");
		}
		if($tipo)
		{
			$criteria->addCriteria('tipoMovimento','in', "$tipo");
		}
		$criteria->addCriteria('idMovimentoRef','IS', "null");
		return $criteria->retrieveAsQuery();
	}
}
?>
