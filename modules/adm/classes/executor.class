<?
class BusinessAdmExecutor extends Business
{
	public $idExecutorServInt;
    public $idTipoServInt;
	public $idUsuario;
	public $dataInicio;
	public $dataFim;

	public $uo;
	public $usuario;

	function __construct($data = null)
	{
		parent::__construct('sigaept', $data);
	}

	function listUoByUsuario($idUsuario)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('idUo');
		$criteria->addColumnAttribute('uo.sigla');
		$criteria->addCriteria('idUsuario','=',$idUsuario);
		$criteria->addCriteria('dataFim','IS','NULL');
		$criteria->addOrCriteria('dataFim','=',"'0001/01/01'");
		$query = $criteria->retrieveAsQuery();
		return ( !$query->eof() ) ? $query : FALSE;
	}
	
	function isExecutorOf($idUsuario)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('datafim');
		$criteria->addCriteria('idUsuario','=',$idUsuario);
		$criteria->addCriteria('dataFim','IS','NULL');
		$criteria->addOrCriteria('dataFim','=',"'0001/01/01'");
		$query = $criteria->retrieveAsQuery();
		return ( !$query->eof() ) ? $query : FALSE;
	}
        public function listaexecutor($idUsuario){ 
                $placa = strtoupper($placa);

		$query.= "count(*) FROM ad_executor
                                where idusuario = $idUsuario
				"

				;
		$sql = new sql($query);
                $query2 = $this->Query($sql);
                return $query2;
        }
        
        function isExecutorUo($idUsuario)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('datafim');
		$criteria->addCriteria('idUsuario','=',$idUsuario);
		$criteria->addCriteria('dataFim','IS','NULL');
		$criteria->addOrCriteria('dataFim','=',"'0001/01/01'");
		$query = $criteria->retrieveAsQuery();
		return ( !$query->eof() ) ? TRUE : FALSE;
	}
        
        function listReqUoVeiculoExecutor($idUsuario)
    {
       
        $sql = new sql ("distinct e.iduo", 
        "ad_executor e
         inner join ad_uo u on u.iduo = e.iduo 
         inner join ad_requisita r on r.iduo = u.iduo", 
         "r.idtiporeq = 4", 
         "e.iduo DESC");
        $sql->SetWhereAND('e.idusuario = '.$idUsuario);

        $query = $this->Query($sql);
        return $query;
    }
    
    function listReqUoAlmoxarifadoExecutor($idUsuario)
    {
       
        $sql = new sql ("distinct e.iduo", 
        "ad_executor e
         inner join ad_uo u on u.iduo = e.iduo 
         inner join ad_requisita r on r.iduo = u.iduo", 
         "r.idtiporeq = 8", 
         "e.iduo DESC");
        $sql->SetWhereAND('e.idusuario = '.$idUsuario);

        $query = $this->Query($sql);
        return $query;
    }
    
    function isUsuarioExecutorUo($idUsuario,$idtiporeq)
    { 
        $sql = new sql ("distinct e.iduo, e.datainicio, e.datafim", 
        "ad_executor e
            inner join ad_uo u on e.iduo =  u.iduo
            inner join ad_requisita r on r.iduo = u.iduo", 
           "", 
           "e.iduo DESC");
        $sql->SetWhereAND('r.idtiporeq = '.$idtiporeq);
        if($idUsuario)
           $sql->SetWhereAND('e.idusuario = '.$idUsuario);
        
        $query = $this->Query($sql);
	return ( !$query->eof() ) ? true : FALSE;
    }
    
    function listIdReqUoExecutor($idUsuario,$idtiporeq)
    {
       
        $sql = new sql ("distinct e.iduo", 
        "ad_executor e
         inner join ad_uo u on u.iduo = e.iduo 
         inner join ad_requisita r on r.iduo = u.iduo", 
         "", 
         "e.iduo DESC");
        $sql->SetWhereAND('e.idusuario = '.$idUsuario);
        $sql->SetWhereAND('r.idtiporeq = '.$idtiporeq);

        $query = $this->Query($sql);
        return $query;
    }
        
       
}
?>
