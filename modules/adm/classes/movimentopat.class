<?

class BusinessAdmMovimentoPat extends Business
{
    public $idMovimentacao;
	public $tipoMovimento;
	public $motivoBaixa;
	public $numeroTermo;
	public $idItemPatrimonio;
	public $idSetorOrigem;
	public $idSetorDestino;
	public $idDependenciaOrigem;
	public $idDependenciaDestino;
	public $dataMovimento;
	public $movimentopat;
	public $numeroProcesso;
        public $idUsuario;

	function __construct($data = null)
    {
       parent::__construct('sigaept',$data);
    }

	function GetById($idMovimentacao)
	{
		$this->idMovimentacao = $idMovimentacao;
		$this->retrieve();
		return $this;
	}
    function OnCreate($data)
    {
        if (empty($data))
        {
//            $this->initialize();
        }
        else
        {
            $this->GetById($data);
        }
    }

	function GetNumeroTermoMaisRecente($idItemPatrimonio)
	{
        $criteria = $this->getCriteria();
        $criteria->AddColumnAttribute('numeroTermo');
        $criteria->addCriteria('idItemPatrimonio','=', "$idItemPatrimonio");
        $criteria->addOrderAttribute('idMovimentacao', false);
        $query = $criteria->retrieveAsQuery();
		return $query->result[0][0];
	}

	function GetNextIdTermo()
	{
		return $this->_db->GetNewId('seq_ad_movimentopat_termo');
	}

	function GetTermoFormatado($termo) //termo com 5 digitos
	{
		//$termo = str_repeat('0', 5 - strlen(trim($termo))) . trim($termo); REMOVIDO 26/11-2013 EDER
		return $termo;
	}

	function GetMovimentoAquisicaoByIdItemPatrimonio($id)
	{
		$criteria = $this->getCriteria();
		$criteria->addCriteria('idItemPatrimonio','=', "$id");
		//$criteria->addCriteria('movimentopat.d','=', "'1'");
		$criteria->addCriteria('tipoMovimento','=', "'1'");
		$cursor = $criteria->retrieveAsCursor();
		return $cursor->getObject();
	}
        // 01-11-2011 - Daniel Bonfim
        function getByIdItemPatrimonio($idItemPatrimonio) {
            $criteria = $this->getCriteria();
            $criteria->AddColumnAttribute('*');
            $criteria->addCriteria('idItemPatrimonio','=', "'$idItemPatrimonio'");
            return $criteria->retrieveAsQuery()->result;
        }
	function GetAllMovimentacoes($id, $tipomov){

	$criteria = $this->getCriteria();
	$criteria->AddColumnAttribute('*');
	$criteria->addCriteria('idItemPatrimonio','=', "'$id'");
	$criteria->addCriteria('tipomovimento','=', "'$tipomov'");
	return $criteria->retrieveAsQuery()->result;
	}
}

?>
