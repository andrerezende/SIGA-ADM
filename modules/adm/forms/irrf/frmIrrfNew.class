<?
class frmIrrfNew extends MForm
{
	function __construct()
	{
		global $MIOLO, $module;

		parent::__construct('Adicionar IRRF');
		$this->setClose($MIOLO->GetActionURL($module, 'main'));	
		$this->eventHandler();
	}

	function createFields()
	{
		global $MIOLO, $action;

		$this->ClearButtons();
		
		$fields = array(
			new MCalendarField('dataIni','','Data Início',10),
			new MCalendarField('dataFim','','Data Fim',10),
			new MTextField('aliquota','','Alíquota',1, 'Máx. 1 número'),
			new MCurrencyField('ate','','Valor Máximo',20),
			new MTextField('percentual','','Percentual',6),
			new MCurrencyField('deducao','','Dedução',20),
		);
		$this->setFields($fields);
		
		$buttons = array(new MButton("btnNew", "Incluir IRRF"));
		$this->setButtons($buttons);
		
		$validators = array(
			new MRequiredValidator('dataIni'),
			new MRequiredValidator('dataFim'),
			new MRequiredValidator('aliquota'),
			new MRequiredValidator('ate'),
			new MRequiredValidator('percentual'),
			new MRequiredValidator('deducao'),
		);
		$this->SetValidators($validators);
	}


	function btnNew_click()
	{
		global $MIOLO , $page, $module;
		$data = $this->getData();
		$irrf = $MIOLO->getBusiness('common', 'irrf');
		$irrf->setData($data);
		$cf = new MCurrencyFormatter();
		$irrf->ate = $cf->toDecimal($this->objIrrf->ate);
		$irrf->deducao = $cf->toDecimal($this->objIrrf->deducao);
		
		if($irrf->dataIni > $irrf->dataFim)
		{
			$this->AddError('A Data Fim deve ser posterior a Data Início.');
		}
		else
		{
			try {
				$irrf->save();
				$go = $MIOLO->getActionURL('adm', 'main:irrf:find', $irrf->idIrrf);
				$this->manager->Information('Irrf incluída com sucesso.',$go);

			}catch (Exception $e){
				$this->addError($e->getMessage());
			}
		}
	}

 }
?>
