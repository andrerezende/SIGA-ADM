<?
class frmMotoristaUoNew extends MForm
{
    protected $objMotorista;
	
    function __construct($objMotorista)
    {
        $this->objMotorista = $objMotorista;
        parent::__construct('Incluir UO');
        $this->EventHandler();
    }

    function CreateFields()
    {
        $fields = array (
            new MHiddenField('iduo'),
            new MLookupTextField('lkpUo','','U.O',50),
        );
        $this->SetFields($fields);
        $this->SetFieldAttr('lkpUo','module','adm');
        $this->SetFieldAttr('lkpUo','item','UoMotoristaVeiculo');
        $this->SetFieldAttr('lkpUo','event','filler');
        $this->SetFieldAttr('lkpUo','related','iduo, lkpUo');
	   
        $buttons = array (
            new FormButton('btnSalvar', 'Incluir')
        );
        $this->SetButtons($buttons);

        $validators = array (
            new MRequiredValidator('lkpUo')
        );
        $this->SetValidators($validators);
    }
    
    public function btnSalvar_click()
	{
		$idUsuario = $this->GetFormValue('idUsuario');

        if( ! isset($idUsuario) )
        {
            $this->manager->Error('U.O. não informado corretamente.',false);
            return;
        }
        
        try
		{

        
            $objMotoristaUO = $this->manager->GetBusiness('adm','motoristauo');
            $objMotoristaUO->idMotorista = $this->objMotorista->idMotorista;
            $objMotoristaUO->idUo  = $this->GetFormValue('iduo');
            $msgLog = 'Novo motorista relacionado à UO';
		
            $objMotoristaUO->save();
            //$go = $this->manager->GetActionURL('adm','main:motorista:new');
	   // $this->manager->Information('Novo motorista relacionado',$go);
	    $this->objMotorista->Log(OP_INS,$msgLog);
	}
		catch (Exception $e)
		{
                        $this->manager->Error("U.O já relacionada: ",$e->getMessage());
		}
		$this->SetFieldValue('lkpUo','');
	}


}
?>