<?
MIOLO::Import('modules::adm::forms::taxi::frmTaxiPai');

class frmTaxiEditar extends frmTaxiPai
{

	protected $objTaxi;

	function __construct($objTaxi)
	{
		$this->objTaxi = $objTaxi;
		$this->Form('Dados do Taxi');
		$this->EventHandler();
	}

	function CreateFields()
	{
		global $MIOLO;

		//Victor fez
		$this->AddField(new TextLabel('dataIni','','Data Início','8'));
		$this->AddField(new MCalendarField('dataFim','','Data Fim', '8'));	   
		$this->AddField(new TextField('valor','','Valor','5',''));
		// Vitor feze acima	   	
		$buttons = array(
			new FormButton("btnSalvar","Salvar")
		);

		$this->SetButtons($buttons);
		$this->SetData();
	}
	
	public function btnSalvar_click()
	{
		$this->objTaxi->SetData($this->GetData());
		$this->objTaxi->valor = str_replace(',', '.', $this->objTaxi->valor);

		if(Form::GetFormValue('dataFim') == ''){
			$this->AddError("Selecione a Data Fim.");
		}
		elseif(Form::GetFormValue('valor') == ''){
			$this->AddError("Informe o valor do Taxi.");
		}
		elseif($this->objTaxi->dataFim < $this->objTaxi->dataIni){
			$this->AddError("A Data fim não deve ser anterior a Data Início.");
		}
		elseif($this->objTaxi->valor < 0){
			$this->AddError("O valor do Taxi não pode ser negativo.");
		}
		else
		{
			try
			{
				$this->objTaxi->save();
				$this->objTaxi->Log(OP_UPD,"Dados do Taxi modificados");
				
				$go = $this->manager->GetActionURL('adm','main:taxi:find');
				$this->manager->information("Dados modificados com sucesso!",$go );
			}
			catch (Exception $e)
			{
				$this->addError($e->getMessage());
			}
		}
	}
}
?>
