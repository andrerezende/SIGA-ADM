<?
class frmEmpenho extends MCompoundForm
{
    protected $empenho;
    function __construct($objEmpenho)
    {
        $this->empenho = $objEmpenho;
        $numero = ($this->empenho->numero) ? $this->empenho->numero : 'SEM NÚMERO';
		
		$this->empenho->retrieveAssociation('fornecedor');
		$this->empenho->fornecedor->retrieveAssociation('instituicao');

        parent::__construct("Empenho {$numero} - {$this->empenho->fornecedor->instituicao->nome}");
        $this->SetClose($this->manager->getActionURL('adm','main:empenho:find'));
        $this->SetIcon($this->manager->getUi()->GetImage('adm','default_mini.png'));
    }

    function CreateFields()
    {
        $empenho = $this->empenho;
        switch (Form::GetFormValue('form'))
        {
            case 'numerar' : 
			    $this->_form[] = $this->manager->getUI()->getForm('adm','frmEmpenhoNumerar',$empenho,'empenho'); 
            break;
        }
        $action = $context->action;
        $this->_panel[0] = $panel = new ActionPanel('pnlCompound','Opções','',false);
        $panel->SetIconType('small');
        $panel->AddUserAction('adm_numeroempenho',A_EXECUTE,'Empenhar',$this->manager->getUI()->GetImage('adm','edit.png'),'adm',$action, $empenho->idEmpenho, array("form"=>"numerar"));
        $numero = ($empenho->numero) ? $empenho->numero : 'SEM NÚMERO';
		$this->_info[0]	= new MTextLabel('txtNumero',$numero,'Número');
		$this->_info[1]	= new MTextLabel('txtFornecedor',$empenho->fornecedor->instituicao->nome,'Fornecedor');
	}
}
?>
