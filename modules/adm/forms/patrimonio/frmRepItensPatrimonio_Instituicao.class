<?php

// 14/06/2011 - Daniel Bonfim
class frmRepItensPatrimonio_Instituicao extends MForm {

    protected $objInstituicao;
    protected $allInstits;
    public $teste;
    protected $mtfUsuarios;
    var $idurl;

    /**
     * Business utilizado
     * @var frmRepItensPatrimonio_Instituicao
     */
    public function __construct() {
        global $MIOLO, $module;
        $this->objInstituicao = $MIOLO->GetBusiness('common', 'instituicao');
        parent::__construct('Filtragem por Instituição, setor, conta contábil, nº empenho e CNPJ');
        $this->defaultButton = false;
        //$this->page->addJsCode(file_get_contents(dirname(__FILE__).'/js/frmPedidoNew.js'));
        $this->EventHandler();
    }

    public function CreateFields() {
        global $MIOLO, $page, $module, $context, $action, $history;
        parent::CreateFields();


        $orderby = Form::GetFormValue('orderby');
        $opcoes = array(
            "i.iditempatrimonio" => "Nº Tombo",
            "i.descricao" => "Descrição",
        );
        $teste = array();
        $this->allInstits = $this->objInstituicao->ListAlInst2();
        $mtField = array(array('mtinstits', 'Instituições', '', $this->allInstits));
        $mtfUsuarios = new MMultiTextField2('instituicao', NULL, 'Instituições', $mtField, 300, true, 'vertical');
        $fields = array(
            $mtfUsuarios,
            new MLookupTextField('siglaSetor', '', 'Setor', 15, NULL, NULL, NULL, 'common', 'setor2'),
            new MLookupTextField('idVidaUtil', '', 'Conta contábil', 15, NULL, NULL, NULL, 'adm', 'ContaContabil'),
            new MHiddenField('idIsntituicao'),
//            new MHiddenField('instituicao'),
            new MHiddenField('idSetor'),
            new MTextField("txEmpenho", '', "Número Empenho", "20"),
            new MTextField("txCnpj", '', "CNPJ", "20"),
                //snew MSelection('orderby', $orderby, 'Ordenar por', $opcoes)
        );

        $this->SetFields($fields);
        $this->SetFieldAttr('instituicao', 'related', 'idInstituicao,instituicao');
        $this->SetFieldAttr('siglaSetor', 'related', 'idSetor,siglaSetor');
        $this->SetFieldAttr('idVidaUtil', 'related', 'idVidaUtil');
        $this->SetFieldAttr('lkpMaterial', 'module', 'adm');
        $this->SetFieldAttr('lkpMaterial', 'item', 'material');
        $this->SetFieldAttr('lkpMaterial', 'event', 'filler');
        $this->SetFieldAttr('lkpMaterial', 'related', 'idMaterial,lkpMaterial');

        $buttons = array(
            new MButton('btnPost', 'Gerar Relatório'),
//            new FormButton('btnPost','Gerar Relatório'),
            new MButton('btnLimpar', 'Limpar'),
            //new MText('','** Este relatório vai gerar uma planilha em excel **')
        );

        $this->SetButtons($buttons);

        /*
          // Validadores
          $validators = array(
          new MRequiredValidator('instituicao'),
          new MRequiredValidator('idVidaUtil'),
          //new MRequiredValidator('orderby'),
          );
          $this->setValidators($validators);
         */



//        $this->page->onLoad("MIOLO_GetElementById('idInstituicao').focus();");
//        $this->page->onLoad("MIOLO_GetElementById('idVidaUtil').focus();");
    }


    function btnPost_click() {
        global $MIOLO, $module, $item, $theme;

//      
//          $report = new MJasperReport('sigaept');
//          $parameters['SUBREPORT_DIR']	= $MIOLO->GetConf('home.modules');
//          $parameters['int_pIdUsuario']	= $MIOLO->login->idkey;
//          $parameters['pOrdem']           =  Form::GetFormValue('orderby');
//          $parameters['pData']            = date('d/m/y');
//          $parameters['pURL']		= $MIOLO->GetConf('home.url');

          $parameters['pIdInstituicao']	=  Form::GetFormValue('idInstituicao');
//          $parameters['pIdVidaUtil']	=  Form::GetFormValue('idVidaUtil');
//          $parameters['pIdSetor']         =  Form::GetFormValue('idSetor');

//          if(empty($parameters['pIdInstituicao']) || is_null($parameters['pIdInstituicao'])) {
//          $this->Error("Instituição não informada");
//          return;
//          }


    //         ' if(!empty($parameters['pOrdem']) && !is_null($parameters['pOrdem'])) {
    //          ($parameters['pOrdem'] == "i.iditempatrimonio") ? $report->Execute($module, 'itensPatrimonio2', $parameters) : $report->Execute($module, 'itensPatrimonio', $parameters);
    //
    //          } else {
    //          // numero tombo como padrao
    //          $parameters['pOrdem'] = "i.iditempatrimonio";
    //          $report->Execute($module, 'itensPatrimonio2', $parameters);
    //          //$this->Error("Selecione o tipo de ordenação");
    //          //return;
    //          }
    //               
        // 07-11-2011 - Daniel Bonfim
        $filtradoPor = "instituicao";
        $idInstituicao = Form::GetFormValue('instituicao');
        $instituicao = Form::GetFormValue('instituicao');
        $idSetor = Form::GetFormValue('idSetor');
        $idVidaUtil = Form::GetFormValue('idVidaUtil');
        $empenho = Form::GetFormValue('txEmpenho');
        $cnpj = Form::GetFormValue('txCnpj');
//        $orderby = (Form::GetFormValue('orderby')) ? Form::GetFormValue('orderby') : "i.iditempatrimonio";
     
        if($idSetor != ''){
            $objSetor = $MIOLO->GetBusiness('common', 'setor', $idSetor);
        }else{}
        $siglaSetor = $objSetor->sigla;
        
//          if(empty($idVidaUtil) || is_null($idVidaUtil)) {
//          $idVidaUtil	=  '%';
//          }
//          if(empty($idInstituicao) || is_null($idInstituicao)) {
//          $idInstituicao	=  '%';
//          }
//          if(empty($siglaSetor) || is_null($siglaSetor)) {
//          $siglaSetor 	=  '%';
//          }
          
//          if (!$instituicao) {
//            $this->Error("Instituição não informada");
//            return;
//            }
            
          if ($instituicao != "" or $idSetor != ""){
              if(($instituicao != "") == ($idSetor != "")){
                  $this->Error("Instituto e Setor selecionados. Favor selecione somente o Instituto ou o Setor.");
            return;
              }
          }
//      var_dump($idInstituicao);exit;
        
//          for ($i=0;$i < count($idInstituicao); $i++) {
//                $cochetes = array('[', ']');
//                $idInstituicao[$i] = str_replace($cochetes, '', $idInstituicao[$i]);
//           }
          
//        } else if (!$idSetor) {
//            $this->Error("Setor não informado");
//        } else if (!$idVidaUtil) {
//            $this->Error("Conta contábil não informada.");
//        }else {  //else if (!$empenho) {
//            $this->Error("Número Empenho não informado.");
//        } else if (!$cnpj) {
//            $this->Error("Número do CNPJ não informado.");
//        }
           $tamanho1 = count($idInstituicao);
          for ($i = 0; $i <= $tamanho1; $i++) {
              $cochetes = array('[', ']');
              $idInstituicao[$i] = str_replace($cochetes, '', $idInstituicao[$i]);
          }

        $idinstits = $this->objInstituicao->getIDInstArray($idInstituicao);

         $tamanho1 = count($idInstituicao);
          for ($i = 0; $i <= $tamanho1; $i++) {
              $cochetes = array('[', ']');
              $idInstituicao[$i] = str_replace($cochetes, '', $idInstituicao[$i]);
          }
        $this->idurl = substr($this->idurl, 0, (strlen($idurl)-1));
        
        $urlref = $this->idurl;
        $MIOLO->page->AddJsCode('window.open("http://' . $_SERVER['HTTP_HOST'] . '/relatorios2/repItensPatrimonio.php?filtradoPor=' . $filtradoPor . '&idInstituicao=' . urlencode($urlref) . '&idSetor=' . $idSetor . '&idVidaUtil=' . $idVidaUtil . '&numeroEmpenho=' . $empenho . '&cnpj=' . $cnpj . '&orderby=' . $orderby . '&siglasetor='.$siglaSetor. '");');
        return;
        }
    public function btnLimpar_click() {
         global $MIOLO;
         $this->SetFieldValue('instituicao', "");
//         $this->SetFieldValue('idInstituicao', "");
         $this->SetFieldValue('idVidaUtil', "");
         $this->SetFieldValue('txEmpenho', "");
         $this->SetFieldValue('siglaSetor', "");
         $this->SetFieldValue('txCnpj', "");
         $this->SetFieldValue('idSetor', "");
    }

}

?>