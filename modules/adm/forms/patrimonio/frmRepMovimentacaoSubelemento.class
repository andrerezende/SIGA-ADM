<?php
// 13-11-2011 - Daniel Bonfim
class frmRepMovimentacaoSubelemento extends MForm
{
	public function __construct()
	{
		parent::__construct('Relatório de Movimentação por Subelemento');
		$this->EventHandler();
		$this->defaultButton = false;
	}
	public function CreateFields()
	{
		global $MIOLO, $module, $action, $item, $theme;

        $fields = array( 
            // descricao subelemento
            new MLookupTextField('descricao', '', 'Subelemento', 50, NULL, NULL, NULL, $module, 'subelemento2'),
            // sigla uo
            new MLookupTextField('sigla', '', 'Sigla U.O.', 30, NULL, NULL, NULL, $module, 'uo2'),
            new MHiddenField('iduo'),
            // nome uo
            new MHiddenField('nome'),
            new MHiddenField('idelemento'),
            new MHiddenField('idsubelemento'),
            
            new MCalendarField('dataInicio','','Data Início',20),
            new MCalendarField('dataFim','','Data Fim',20),
        );
        $this->SetFields($fields);
        $this->SetFieldAttr('descricao', 'related', 'descricao,idsubelemento,idelemento');
        $this->SetFieldAttr('sigla', 'related', 'sigla,iduo,nome');
		
        $buttons = array(
			new MButton('btnPost', 'Gerar Relatório'),
		);
		$this->SetButtons($buttons);
	}
	public function btnPost_click()
    {
        global $MIOLO, $module, $item;

        // 10-11-2011 - Daniel Bonfim
        
        $filtradoPor = "SUB ELEMENTO";
        // subelemento
        $descricaoSubElemento = Form::GetFormValue('descricao');
        $idElemento = Form::GetFormValue('idelemento');
        $idSubElemento = trim(Form::GetFormValue('idsubelemento'));
        
        // uo
        $siglaUo = trim(Form::GetFormValue('sigla'));
        $idUo = trim(Form::GetFormValue('iduo'));
        $nomeUo = trim(Form::GetFormValue('nome'));
        
        $dataInicio = trim(Form::GetFormValue('dataInicio'));
        $dataFim = trim(Form::GetFormValue('dataFim'));
        
        //var_dump("descricao: $descricao - idelemento: $idelemento - idSubelemento: $idsubelemento <br/>");
        //var_dump("siglaUo: $siglaUo - idUo: $idUo - nomeUo: $nomeUo");exit;
        
        if (empty($descricaoSubElemento)) {
            $this->addError("Selecione o Subelemento.");
            return;
        } 
        if (empty($siglaUo)) {
            $this->addError("Selecione a UO.");
            return;
        }
        
        header("Location: http://".$_SERVER['HTTP_HOST']."/relatorios2/repMovimentacao.php?filtradoPor=$filtradoPor&idNotaFiscal=$idNotaFiscal&notaFiscal=$notaFiscal&descricaoSubElemento=$descricaoSubElemento&idSubElemento=$idSubElemento&siglaUo=$siglaUo&idUo=$idUo&dataInicio=$dataInicio&dataFim=$dataFim");
    }
    
    public function geraMeses() {
        global $MIOLO;
        $meses = array(
            1 => 'Janeiro',
            2 => 'Fevereiro',
            3 => 'Março',
            4 => 'Abril',
            5 => 'Maio',
            6 => 'Junho',
            7 => 'Julho',
            8 => 'Agosto',
            9 => 'Setembro',
            10 => 'Outubro',
            11 => 'Novembro',
            12 => 'Dezembro',
        );
        return $meses;
    }
    public function geraAnos() {
        $anos = array();
        $anoAtual = date('Y');
        $anoInicial = $anoAtual - 40;
        for ($i = $anoAtual; $i >= $anoInicial; --$i) {
            $anos[(int) $i] = (int) $i;
        }
        return $anos;
    }
}
