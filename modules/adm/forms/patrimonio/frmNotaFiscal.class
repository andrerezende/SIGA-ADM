<?php
// Daniel Bonfim
class frmNotaFiscal extends MCompoundForm {
/**
 * Business utilizado
 * @var BusinessAdmNotaFiscal
 */
	private $objNotaFiscal;
/**
 *
 * @var BusinessAdmItemPatrimonio
 */
	private $itemPatrimonio; // business
	private $notaFiscal; // business
	private $numNota;
	private $idNotaFiscal;
	private $cnpj;
	private $datanotafiscal;
	private $dataateste;
	private $valor;
	private $situacao;
	private $observacao;
	private $desconto;
	private $descricaoitem;
	private $empenho;
        private $bloqueio;
	private $quantidadeItensNota;
	private $valorunidade;
	private $arrayDescricaoItem;
	private $arrayValorUnidadeItem;
	private $arrayNotaFiscalItem;
	public  $motivoestorno;
	private $grid;
	private $botaoListar;
	private $painel;
        private $idinstituicao;
        private $instituicao;
        private $idFornecedor;
	private $objFornecedor;
        private $dataAquisicao;
        private $numPro;
        private $marcaModelo;
        private $descricaoCC;
        private $dataGarantia;
        private $idVidaUtil;
        private $classificador;

	function __construct($idNotaFiscal = null) {
		global $MIOLO, $module;

		$this->itemPatrimonio = $MIOLO->GetBusiness($module, 'itempatrimonio');
		$this->objNotaFiscal = $MIOLO->GetBusiness($module, 'notafiscal', $idNotaFiscal);
//var_dump($this->notaFiscal);exit;
//		if ($idNotaFiscal != null) {
			$this->numNota = $this->objNotaFiscal->notaFiscal;
			$this->idNotaFiscal = $idNotaFiscal;
			$this->cnpj=$this->objNotaFiscal->cnpj;
			$this->datanotafiscal=$this->objNotaFiscal->dataNotaFiscal;
			$this->valor=$this->objNotaFiscal->valor;
			$this->dataateste=$this->objNotaFiscal->dataAteste;
			$this->situacao=$this->objNotaFiscal->situacao;
			$this->idFornecedor=$this->objNotaFiscal->idFornecedor;
			if($this->situacao=='A'){$this->situacao='ATIVA';}
			elseif($this->situacao=='E'){$this->situacao='ESTORNADA';}
                        $this->instituicao = $MIOLO->GetBusiness('common','instituicao', $this->objNotaFiscal->idinstituicao);;
                        $this->observacao=$this->objNotaFiscal->obs;
			$this->desconto=$this->objNotaFiscal->desconto;
                        $this->bloqueio = $this->objNotaFiscal->bloqueio;
			$this->objFornecedor=$MIOLO->GetBusiness($module, 'fornecedor');
                        if ($this->bloqueio == 'S'){
                            $bloqueio = ' - Bloqueada';
                        }else $bloqueio = '';

			$this->descricaoitem=$this->itemPatrimonio->getDescricaoByIDNotaFiscal($this->idNotaFiscal);

			$idobjItemPatrimonio=$this->itemPatrimonio->getValorByIDNotaFiscal($this->idNotaFiscal);
			$idobjItemPatrimonio=$idobjItemPatrimonio[0][0];

			$objItemPatrimonio=$this->itemPatrimonio->getByID($idobjItemPatrimonio);

			$this->empenho= $objItemPatrimonio->getEmpenhoByIdNota($this->idNotaFiscal);
			$this->quantidadeItensNota = $this->itemPatrimonio->ContaItemPatrimonioNotaFiscal($this->idNotaFiscal)->result[0][0];
			$this->valorunidade = $this->itemPatrimonio->getValorByIDNotaFiscal($this->idNotaFiscal);                        
                        
                        //24-07-2012 Tiago Macedo
                        $objPatMinId = $MIOLO->GetBusiness($module, 'itempatrimonio', $this->itemPatrimonio->getMinIDItem($idNotaFiscal));                        
                        $this->dataAquisicao = $objPatMinId->dataAquisicao;
                        $this->numPro = $objPatMinId->numPro;
                        $this->marcaModelo = $objPatMinId->marcaModelo;
                        $classificador = $MIOLO->GetBusiness($module,'classificador');                        
                        $classificador->GetById($objPatMinId->idClassificador);
                        $this->classificador = $classificador->descricao;
                        $this->idVidaUtil = $objPatMinId->idvidautil;
                        $ccontabil = $MIOLO->GetBusiness('adm', 'vidautil');
                        $this->descricaoCC = $ccontabil->getDescricao($objPatMinId->idvidautil);
                        $this->dataGarantia = $this->objNotaFiscal->dataGarantia;
                        if ($this->dataGarantia) $this->dataGarantia=date('d/m/Y', strtotime($this->dataGarantia));

//		}
		parent::__construct();


		$this->SetClose($MIOLO->GetActionURL('adm','main:notafiscal:find'));
		$this->SetTitle("Nota Fiscal Número  $this->numNota".$bloqueio);
		$this->SetIcon($MIOLO->GetUi()->GetImage('adm','default_mini.png'));
		$this->defaultButton = false;
		$this->page->addJsCode(file_get_contents(dirname(__FILE__) . '/../../ui/js/mask.js'));
		$this->EventHandler();
	}

	function CreateFields() {
		global $MIOLO, $page, $module, $context, $history;

		//Tiago Macedo 18-05-2012
                $bussUsuario = $MIOLO->GetBusiness("common",'usuario');
                $objuser = $bussUsuario->GetById2($this->manager->auth->login->idkey);
                $bussSetorUsuario = $MIOLO->GetBusiness("common", 'setor', $objuser->idSetor);

                $ui = $MIOLO->GetUI();
		$form = MForm::GetFormValue('form');


		switch ($form) {
			case 'editar' :
                                if(($this->bloqueio == 'N' && $bussSetorUsuario->idinstituicao == $this->objNotaFiscal->idinstituicao) || ($this->manager->perms->isMemberOf($this->manager->login, 'ADM_PATRIMONIO_ADMIN')))
                                    $this->_form[0] = $ui->GetForm($module, 'frmNotaFiscalEdit', $patrimonio, 'patrimonio');
                                else $this->addError("Você não tem permissão para editar itens patrimoniais de outra instituição!");
				break;

			case 'estorno2' :
				$this->SetTitle("");
                                if(($this->bloqueio == 'N' && $bussSetorUsuario->idinstituicao == $this->objNotaFiscal->idinstituicao) || ($this->manager->perms->isMemberOf($this->manager->login, 'ADM_PATRIMONIO_ADMIN')))
                                    $this->_form[0] = $ui->GetForm($module, 'frmNotaFiscalEstorno', $patrimonio, 'patrimonio');
				else $this->addError("Você não tem permissão para estornar itens patrimoniais de outra instituição!");
                                break;
			case 'listar' :
				$this->SetTitle("");
				$this->_form[0] = $ui->GetForm($module, 'frmNotaFiscalListar', $patrimonio, 'patrimonio');
				break;
                        case 'bloqueio' :
                                if ($this->bloqueio == 'N'){
                                    $this->objNotaFiscal->bloqueio = 'S';
                                    try {
                                        $this->objNotaFiscal->update();
                                    } catch (Exception $e) {
                                        $this->AddInfo("ad_notafiscal: Falha ao atualizar o registro.");
                                        }
                                    $MIOLO->Information("Item bloqueado com sucesso.", "http://".$_SERVER['HTTP_HOST']."//index.php?module=adm&action=main:notafiscal&item=".$this->idNotaFiscal);
                                }else $this->addError("O item já se encontra bloqueado.");
				break;
                        case 'desbloqueio' :
                                if ($this->bloqueio == 'S'){
                                    $this->objNotaFiscal->bloqueio = 'N';
                                    try {
                                        $this->objNotaFiscal->update();
                                    } catch (Exception $e) {
                                        $this->AddInfo("ad_notafiscal: Falha ao atualizar o registro.");
                                        }
                                    $MIOLO->Information("Item desbloqueado com sucesso.", "http://".$_SERVER['HTTP_HOST']."//index.php?module=adm&action=main:notafiscal&item=".$this->idNotaFiscal);
                                }else $this->AddInfo("O item já se encontra desbloqueado.");
				break;
                }


		$item = MForm::GetFormValue('item');

		$action = $context->action;
		$panel = new ActionPanel('pnlCompound','Opções','',false);

		//$panel->AddUserAction('adm_patrimonio_listar',A_EXECUTE,'Listar Itens Relacionados',$ui->GetImageTheme('', 'icons/itens.png'),'adm',$action, '', array("form"=>"listar","item"=>"$this->idNotaFiscal"));
		//if ($this->bloqueio == 'N'  || $this->manager->perms->checkAccess('adm_patrimonio_bloquear',A_EXECUTE)){
                 /* if ($this->bloqueio == 'N'){
                    $panel->AddUserAction('adm_patrimonio_editar',A_EXECUTE,'Editar',$ui->GetImageTheme('','icons/itens_patrimoniais_editar.png'),'adm',$action, $this->oid, array("form"=>"editar", "item"=>"$this->idNotaFiscal"));
                    $panel->AddUserAction('adm_patrimonio_excluir',A_EXECUTE,'Estornar',$ui->GetImageTheme('', 'icons/estorno.png'),'adm',$action, '', array("form"=>"estorno2","item"=>"$this->idNotaFiscal"));
                }*/
		$panel->AddUserAction('adm_patrimonio_listar',A_EXECUTE,'Listar Itens Relacionados',$ui->GetImageTheme('', 'icons/itens.png'),'adm',$action, '', array("form"=>"listar","item"=>"$this->idNotaFiscal"));
                $panel->AddUserAction('adm_patrimonio_bloquear',A_EXECUTE,'Bloquear Nota',$ui->GetImageTheme('', 'icons/bloqueio.png'),'adm',$action, '', array("form"=>"bloqueio","item"=>"$this->idNotaFiscal"));
                $panel->AddUserAction('adm_patrimonio_bloquear',A_EXECUTE,'Desbloquear Nota',$ui->GetImageTheme('', 'icons/desbloqueio.png'),'adm',$action, '', array("form"=>"desbloqueio","item"=>"$this->idNotaFiscal"));

		$this->painel=$panel;
		//$objnotafiscal=$MIOLO->GetBusiness($module, 'notafiscal');
		$query = $this->objNotaFiscal->obterCamposPorId($item);
		$array_campos = $query->result;
		$this->objFornecedor=$this->objFornecedor->getById($this->idFornecedor);
                if ($this->idVidaUtil) $vidaUtil = new TextLabel('idvidautil', $this->idVidaUtil.' - '.$this->descricaoCC,'Conta Contábil');
                    else $vidaUtil = new TextLabel('idvidautil', '','Conta Contábil');
                $this->valor = str_replace('.', ',', $this->valor);
                $this->desconto = str_replace('.', ',', $this->desconto);
                $this->valorunidade[0][1] = str_replace('.', ',', $this->valorunidade[0][1]);
                
		$arrayFields=array(
		new TextLabel('idnota',$this->idNotaFiscal,'ID da Notafiscal'),
		new TextLabel('numeronota',$this->numNota,'Número'),
                new TextLabel('processo', $this->numpro,'Processo'),
		new TextLabel('fornecedor',$this->objFornecedor->nome,'Fornecedor'),
		new TextLabel('datanotafiscal',$this->datanotafiscal,'Data da Nota'),                    
		new TextLabel('valor', "R$ $this->valor",'Valor'),
		new TextLabel('dataateste', $this->dataateste,'Data do ateste'),		
                new TextLabel('situacao', $this->situacao,'Situação'),
                new TextLabel('instituicao', $this->instituicao->instituicao,'Instituição'),
		new TextLabel('obs', $this->observacao,'Observação'),
		new TextLabel('desconto', $this->desconto,'Desconto'),
		new MSeparator('Itens da nota fiscal'),
		new TextLabel('descricaoitem', $this->descricaoitem,'Descrição'),
		new TextLabel('numeroempenho', $this->empenho,'Empenho'),
                new TextLabel('dataaquisicao',$this->dataAquisicao,'Data da Aquisição'),  
                new TextLabel('datagarantia',$this->dataGarantia,'Data da Garantia'),    
		new TextLabel('marcamodelo', $this->marcaModelo,'Marca/Modelo'),
		new TextLabel('classificador', $this->classificador,'Classificador'),
                $vidaUtil,   
                new TextLabel('quantidade', $this->quantidadeItensNota,'Quantidade'),
		new TextLabel('valorunidade', $this->valorunidade[0][1],'Valor da Unidade'),
		new MSpacer(2),
			$panel
		);

		$this->SetFields($arrayFields);
		/*------------------------------- Panel-----------------------------------*/

//		$fields = array(
//			//new MTextField('item', '', 'Nota Fiscal', 20),
//			new MHiddenField('idnota', $var_nota, '', ''),
//			new MTextField('tfNotaFiscal', $array_campos[0][1], 'Nota Fiscal', 20),
//			new MTextField('tfCnpj', $array_campos[0][9], 'CNPJ', 15, 'Apenas números'),
//			new MCalendarField('cfDataNotaFiscal', $this->objNotaFiscal->dataNotaFiscal, 'Data Nota Fiscal', 10),
//			new MTextField('tfValor', $array_campos[0][3], 'Valor', 20),
//			new MCalendarField('cfDataAteste', $this->objNotaFiscal->dataAteste, 'Data do Ateste', 10),
//			new MSelection('situacao', '','Situação',$situacao_selecao),   //
//			new MMultiLineField('tfObs', $array_campos[0][7], 'Observação', 60,2,60),
//			new MTextField('tfDesconto', $array_campos[0][8], 'Desconto', 20),
//			new MSpacer(2),
//			new MSeparator('Itens da nota fiscal'),
//			new MSpacer(1),
//			new MTextField('tfDescricao', $this->arrayDescricaoItem[0][1], 'Descricao do Ítem', 70),
//			new MSpacer(1),
//			new MTextField('tfNumeroEmpenho',$this->itemPatrimonio->numeroEmpenho , 'Nº Empenho', 10),
//			new MSpacer(1),
//			new MTextlabel('tfQuantidade', $this->quantidadeItensNota, 'Quantidade', 10),
//			new MSpacer(1),
//			new MTextlabel('tfValorUni', $this->arrayValorUnidadeItem[0][1], 'Valor Unidade', 20),
//		);
//		$this->SetFields($fields);
//		$this->SetFieldAttr('tfNumeroEmpenho', 'readonly', true);
//
//		//  Atributos dos campos
//		$this->tfCnpj->addAttribute('maxlength',18);
//		$this->tfCnpj->addAttribute('onKeyUp', 'makeMask(this, \'##.###.###/####-##\');');
//		$this->tfCnpj->addAttribute('onFocus', 'makeMask(this, \'##.###.###/####-##\');');
//
//		$go = $this->manager->getActionURL('adm','notafiscal:find');
//		$go2 = $this->manager->getActionURL('adm','notafiscal:estorno2',$this->itemPatrimonio->idItemPatrimonio, array('form' => 'estorno2'));
//		$this->page->redirect($go);
//
//		$var_idnota=$this->GetFormValue('idnota');
//
//		$buttons = array(
//			new MButton('btnAtualizar', 'Atualizar'),
//			new MButton('btnRetornar', 'Retornar', $go),
//			new MButton('btnEstornar','Estornar', $go2),
//			new MButton('btnImprimir', 'Imprimir', 'PDF')
//		);
//		$this->SetButtons($buttons);
    }




	}
