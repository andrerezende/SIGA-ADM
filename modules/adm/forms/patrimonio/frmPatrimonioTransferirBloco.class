<?
class frmPatrimonioTransferirBloco extends MForm
{

	protected $objPatrimonio;

    function __construct($objPatrimonio)
    {
		$this->objPatrimonio = $objPatrimonio;
        parent::__construct('Transferir Itens em Bloco');
		$this->SetClose(null);
        $this->EventHandler();
    }

    function CreateFields()
    {
		global $MIOLO, $module, $self;

		$query = $this->objPatrimonio->ListItensMesmoBloco();
		$href_datagrid = $MIOLO->GetActionURL($module, $self, '');

		$columns = array(
			new MDataGridColumn('idItemPatrimonio','Número de Patrimônio','center',false, '50%'),
			new MDataGridColumn('numeroSerie','Número de Série','center',false, '50%'),
//			new MDataGridColumn('dataEmpenho','Data','center', true, '15%'),
//			new MDataGridColumn('fornecedor','Fornecedor','left', true, '70%'),
		);
		$datagrid = new MDataGrid2($query, $columns, $href_datagrid, 100);
		$datagrid->SetTitle('Selecione os Itens para Transferência em Bloco');
		$datagrid->SetWidth('60%');
		$datagrid->SetClose(null);
		$datagrid->AddActionSelect();

		$fields = array (
			$datagrid,
			new MSpacer(1),
			new MLookupTextField('setor','','Setor de Destino',50),
			new MHiddenField('idSetor'),
			new MLookupTextField('dependencia','','Dependência de Destino',50),
			new MHiddenField('idDependencia'),
			new MCalendarField('dataMovimento',date('d/m/Y'),'Data',20),
		);

        $this->SetFields($fields);
		$this->page->addJsCode(file_get_contents(dirname(__FILE__) . '/../../ui/js/mask.js'));
		$this->SetFieldAttr('setor','module','common');
		$this->SetFieldAttr('setor','item','setor');
		$this->SetFieldAttr('setor','related','idSetor,setor');
		$this->SetFieldAttr('dependencia','module','adm');
		$this->SetFieldAttr('dependencia','item','dependencia');
		$this->SetFieldAttr('dependencia','related','idDependencia,dependencia');
		$this->SetFieldAttr('dependencia','filter','dependencia,idSetor,setor');
		$this->dataMovimento->addAttribute('onBlur', 'makeMask(this, \'##/##/####\');');
		$this->dataMovimento->addAttribute('onKeyUp', 'makeMask(this, \'##/##/####\');');

		$buttons = array(
			new MButton('btnSalvar', 'Transferir')
		);
		$this->SetButtons($buttons);

		$validators = array (
			new MRequiredValidator('idSetor'),
			new MRequiredValidator('setor'),
		);
		$this->SetValidators($validators);
    }

	public function btnSalvar_click()
	{
		global $MIOLO;

		$selected = $this->GetFormValue('select');
		$setorOrigem = $this->objPatrimonio->idSetor;
		$dependenciaOrigem = $this->objPatrimonio->idDependencia;
        $data = $this->GetData();

		$movimentoPat = $this->manager->GetBusiness('adm','movimentopat');
		$novoIdNumeroTermo = $movimentoPat->GetTermoFormatado($movimentoPat->GetNextIdTermo());

		try {
			foreach($selected as $sel) {
				$objPatrimonioBloco = $this->manager->GetBusiness('adm','itempatrimonio');
				$objPatrimonioBloco->GetById($sel);
				$objPatrimonioBloco->SetData($this->GetData());
				$objPatrimonioBloco->idDependencia = ($data->idDependencia) ? ($data->idDependencia) : null;

				$movimentoPat = $this->manager->GetBusiness('adm','movimentopat');
				$movimentoPat->numeroTermo = $novoIdNumeroTermo . '/' . date('Y');
				$movimentoPat->tipoMovimento = '2';
				$movimentoPat->idItemPatrimonio = $objPatrimonioBloco->idItemPatrimonio;
				$movimentoPat->idSetorOrigem = $setorOrigem;
				$movimentoPat->idSetorDestino = $data->idSetor;
				$movimentoPat->idDependenciaOrigem = $dependenciaOrigem;
				$movimentoPat->idDependenciaDestino = ($data->idDependencia) ? ($data->idDependencia) : null;
				$movimentoPat->dataMovimento = $data->dataMovimento;

                                // 01-11-2011 - Daniel Bonfim
                                $auth = $this->manager->auth;
                                $idUsuario = $auth->login->idkey;

                                $movimentoPat->idUsuario = $idUsuario;

				$objPatrimonioBloco->save();
				$movimentoPat->save();
				$objPatrimonioBloco->Log(OP_UPD,"Item transferido: " . $objPatrimonioBloco->idItemPatrimonio);

				$MIOLO->Information("Transferência realizada com sucesso.", $MIOLO->GetActionURL($module,$action,$this->objPatrimonio->idItemPatrimonio,array('form'=>'transferirbloco')));
			}
		}
		catch (Exception $e) {
			$this->addError($e->getMessage());
		}
	}
 }
?>