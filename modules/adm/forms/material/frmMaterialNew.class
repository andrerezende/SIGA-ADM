<?
class frmMaterialNew extends Form
{
    protected $objUnidade;
    function __construct()
    {
        $this->Form('Incluir Novo Material');
        $this->EventHandler();
        
    }
    function CreateFields()
    {
        global $MIOLO, $module;
        $this->objUnidade = $MIOLO->GetBusiness($module,'unidade');
        $unidade = $this->objUnidade->selAllById();  
//        var_dump($unidade);exit;
        $unidade = array_keys($unidade);        
        $unidade = array_combine($unidade, $unidade);
        
        $opcoes1 = array(
                "S"=>"SIM",
                "N"=>"NÃO",
            );

        $opcoes2 = array(
                "C"=>"CONSUMO",
                "P"=>"PERMANENTE",
            );

        $fields = array(
			new MTextField('codmaterial','','CATMAT','14','Máximo 14 caracteres'),
	    	new MMultiLineField('descresum','','Descricao Resumida','',2,60,'Máximo 100'),
            new MMultiLineField('descricao','','Descricao','',2,60,'Máximo 200'),
            //new MTextField('unidade','KG','Unidade','10','Máximo 10 caracteres'),
            new MSelection('idunidade','KG','Unidade',$unidade),
	    	new MTextField('precoestimado','','Preço Estimado','14','Separação decimal por vírgula'),
            new MSelection('permcons','C','Tipo',$opcoes2),
            new MSelection('estocavel','N','Estocável',$opcoes1),
			new MTextField('idelemento','','Elemento','6','Máximo 6 caracteres'),
			new MTextField('idsubelemento','','Subelemento','2','Máximo 2 caracteres'),
			new MSelection('ativo','S','Ativo',$opcoes1)
        );
        $this->SetFields($fields);
        $validators = array(
                            new MRequiredValidator('codmaterial'),
                            new MRequiredValidator('idelemento'),
                            new MRequiredValidator('idsubelemento'),
                            );
        $this->SetValidators($validators);


        $buttons = array(
            new MButton('btnNew', 'Incluir Material')
        );
        $this->SetButtons($buttons);

    }

    function btnNew_click()
    {
        global $MIOLO, $page, $module;
        $data = $this->GetData();
        $material = $MIOLO->GetBusiness($module,'material');
        $data->precoestimado = $this->getFormValue('precoestimado');
        $data->precoestimado = str_replace(',','.',str_replace('.', '', $data->precoestimado));
        //Colocando ativo se não foi selecionado
        if ($data->ativo == "")
        {
           $data->ativo = "S";
        }

        foreach ($data as $chave=>$valor)
        {
            $array["$chave"] = $valor;
        }
        $array['conf'] = 'sim';
        $array['event'] = 'Insere';

        $action_sim = $this->manager->getActionURL('adm', 'material:new', '', $array);
		$action_nao = $this->manager->getActionURL('adm', 'material:new', '');

        //Verifica se há algum produto cadastrado com este codigo
        $query = $material->GetDescByCod($data->codmaterial);
        if ($query->result != NULL)
        {
            $msg = "Já existe produto cadastrado com o código ".$data->codmaterial.": <br> ";
            foreach ($query->result as $res)
            {
               $msg.="<br> Descrição: ".$res[0]."<br> Unidade: ".$res[1]."<br>";
            }
            $this->manager->question("$msg"."<br>Deseja cadastrar mesmo assim?",$action_sim, $action_nao);
        }
        else
        {
            try
            {
                $this->Insere();
              
   		      // $this->manager->information("Material cadastrado com sucesso.",$this->manager->getActionUrl('adm','main:material:find') );
            }
            catch (Exception $e)
            {
               $this->AddError($e->GetMessage());
            }
         }
    }

    function Insere()
    {
        $MIOLO = MIOLO::getInstance();
        global $module;
        $material = $MIOLO->GetBusiness($module,'material');

        $conf = $this->getFormValue('conf');
        $data->codmaterial = $this->getFormValue('codmaterial');
	$data->descresum = $this->getFormValue('descresum');
        $data->descricao = $this->getFormValue('descricao');
        $data->unidade = $this->getFormValue('idunidade');
        $data->permcons = $this->getFormValue('permcons');
        $data->estocavel = $this->getFormValue('estocavel');
        $data->idelemento = $this->getFormValue('idelemento');
        $data->idsubelemento = $this->getFormValue('idsubelemento');
        $data->ativo = $this->getFormValue('ativo');
        $data->precoestimado = $this->getFormValue('precoestimado');
        $data->precoestimado =str_replace(',','.',str_replace('.', '', $data->precoestimado));
        $material->SetData($data);
        
        try
        {
            
            $material->save(); //grava no banco
   		    $this->manager->information("Material cadastrado com sucesso.",$this->manager->getActionUrl('adm','main:material:find') );
        }
        catch (Exception $e)
        {
                  $this->AddError($e->GetMessage());
        }
    }
 }
?>