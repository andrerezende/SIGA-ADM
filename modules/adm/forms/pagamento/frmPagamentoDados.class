<?
class frmPagamentoDados extends Form
{

	protected $objLiquidacao;
	
    function __construct($objLiquidacao)
    {
		$this->objLiquidacao = $objLiquidacao;
        $this->Form('Dados da Liquidação');
        $this->EventHandler();
    }

    function CreateFields()
    {
       global $MIOLO;
		$fields = array(
			new TextLabel('dataLiquidacao','','Data'),
			new TextLabel('obs','','Obs.'),
			new TextField('ordemBancaria','','Ordem bancaria',16),
			new CalendarField('dataOrdemBancaria','','Data Ord. banc.',15),
			new TextField('processo','','Processo',12)
        );
		
        $this->SetFields($fields);

		$this->ordemBancaria->AddAttribute('maxlength','16');
		$this->processo->AddAttribute('maxlength','12');
		
		$buttons = array(
        	new FormButton('btnSalvar', 'Salvar')
        );

		$this->SetButtons($buttons);

		$validators = array(
			new DateDMYValidator('dataOrdemBancaria','','optional')
		);

		$this->SetValidators($validators);
		$this->SetData();
    }

	function SetData()
	{
		$data = $this->objLiquidacao;
		$this->SetFormValue('dataLiquidacao',trim($data->dataLiquidacao));
		$this->SetFormValue('obs',trim($data->obs));
		$this->SetFormValue('ordemBancaria',trim($data->ordemBancaria));
		$this->SetFormValue('dataOrdemBancaria',trim($data->dataOrdemBancaria));
		$this->SetFormValue('processo',trim($data->processo));
	}

	function GetData()
	{
		$data = new FormData();
		$data->ordemBancaria = trim($this->GetFormValue('ordemBancaria'));
		$data->dataOrdemBancaria = trim($this->GetFormValue('dataOrdemBancaria'));
		$data->processo = trim($this->GetFormValue('processo'));
		return $data;
	}

	public function btnSalvar_click()
	{
		$this->objLiquidacao->SetData($this->GetData());
		$this->objLiquidacao->save();
		if ( $this->objLiquidacao->CheckError() )
		{
			foreach( $this->objLiquidacao->GetErrors() as $e )
			{
				$this->AddError("Informe o seguinte erro a equipe do CGCO: ".$e);
			}
		}
		$this->SetData();
	}
 }
?>
