<?
/**
 * Form Pagamento
 */
class frmPagamento extends CompoundForm
{
	public $oid;
    protected $liquidacao;
    /**
     * Construtor
     */
    function __construct($objLiquidacao)
    {
        global $MIOLO;
        $this->liquidacao = $objLiquidacao;
        parent::__construct();
        $this->SetClose($MIOLO->GetActionURL('adm','main:pagamento:find'));
        $this->SetTitle($this->liquidacao->idLiquidacao);
        $this->SetIcon($MIOLO->GetUi()->GetImage('adm','default_mini.png'));
    }

    function CreateFields()
    {
        global $MIOLO, $page, $module, $context, $history;

        $liquidacao = $this->liquidacao;
        if ($this->oid == NULL) $this->oid = $liquidacao->idLiquidacao;

// form
        $ui = $MIOLO->GetUI();
        $form = Form::GetFormValue('form');
        switch ($form)
        {
            case 'dados' : 
				$this->_form[0] = $ui->GetForm($module,'frmPagamentoDados', $liquidacao, 'pagamento'); 
                break;
        }
        if ($this->_form[0])
        {
            $this->_form[0]->SetClose($MIOLO->GetActionURL('adm','main:pagamento',$liquidacao->idLiquidacao));
        	$page->SetAction($history->Top('action'));
        }

// panel        
        $action = $context->action;
        $this->_panel[0] = $panel = new ActionPanel('pnlCompound','Opções','',false);
        $panel->AddUserAction('ad_pagamento_dados',A_EXECUTE,'Editar',$ui->GetImage('adm','edit.png'),'adm',$action, $this->oid, array("form"=>"dados"));

// info
		$this->_info[0]	= new TextLabel('txtId',$this->liquidacao->idLiquidacao,'ID');
		$this->_info[1]	= new TextLabel('txtData',$this->liquidacao->dataLiquidacao,'Data');
		$this->_info[2]	= new TextLabel('txtValor',number_format($this->liquidacao->valor,2,',',''),'Valor');
	}
}
?>
