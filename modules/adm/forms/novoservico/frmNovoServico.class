<?
class frmNovoServico extends MCompoundForm
{
    protected $oid;
    protected $servico;
    function __construct($objServico)
    {
        $this->servico = $objServico;
        parent::__construct();
        $this->SetTitle("Sugestão de novo servico [{$this->servico->idNovoServico}]");
        $this->SetIcon($this->manager->GetUi()->GetImage('adm','tools1.png'));
        $this->SetClose($this->manager->GetActionURL('adm','main:servico:find'));
    }
    function CreateFields()
    {
        $servico = $this->servico;
        $ui = $this->manager->GetUI();
        $form = MForm::GetFormValue('form');
        switch ($form)
        {
            case 'dados' :
                    $this->_form[0] = $ui->GetForm('adm','frmNovoServicoDados',$servico,'novoservico');
            break;
            case 'excluir' :
                    $this->_form[0] = $ui->GetForm('adm','frmNovoServicoDel',$servico,'novoservico');
            break;
        }
        if ($this->_form[0])
        {
            $this->_form[0]->SetClose($this->manager->GetActionURL('adm','main:servico',$servico->idServico));
        }
        $action = $context->action;
		/*
        $this->_panel[0] = $panel = new MActionPanel('pnlCompound','Opções','',false);
        $panel->SetIconType('small');
        if (($this->servico->status == 1 && $servico->idUsuario == $this->manager->getLogin()->idkey) || $this->manager->getPerms()->checkAccess("adm_cadastroservico",A_EXECUTE))
        {
            $panel->AddAction('Editar',$ui->GetImage('adm','editar_mini.png'),'adm',$action,$servico->idNovoServico,array("form"=>"dados"));
        }
        else
        {
            $panel->AddAction('Ver',$ui->GetImage('adm','editar_mini.png'),'adm',$action,$servico->idNovoServico,array("form"=>"dados"));
        }
        if ($servico->status == 1 && $servico->idUsuario == $this->manager->getLogin()->idkey)
        {
            $panel->AddAction('Cancelar',$ui->GetImage('adm','apagar_mini.png'),'adm',$action, $servico->idNovoServico,array("form"=>"excluir"));
        }
		*/
        switch ($servico->status)
        {
            case 1:
                $status = 'PEDIDO DE CADASTRO';
            break;
            case 2:
                $status = 'EM ANÁLISE';
            break;
            case 3:
                $status = 'CADASTRADO';
            break;
            case 4:
                $status = 'CANCELADO';
            break;
        }
        $servico->retrieveAssociation('usuario');
        $solicitante = $servico->usuario->pessoa->nome;
        $codigo = ($servico->codservico) ? $servico->codservico : 'NENHUM';
        $this->_info[] = new MTextLabel('txtStatus',$status,'Situação',array("1"=>"PEDIDO CADASTRADO"));
        $this->_info[] = new MTextLabel('txtCodigo',$codigo,'Código');
        $this->_info[] = new MTextLabel('txtSolicitante',$solicitante,'Solicitante');
     }
}
?>
