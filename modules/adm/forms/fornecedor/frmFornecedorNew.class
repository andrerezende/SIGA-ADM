<?php
/**
 * frmFornecedorNew
 *
 * @access public
 */
class frmFornecedorNew extends Form {

/**
 * objFornecedor
 *
 * @var BusinessAdmFornecedor
 * @access public
 */
	public $objFornecedor;

/**
 * __construct
 *
 * @global MIOLO $MIOLO
 * @access public
 * @return void
 */
	public function __construct() {
		global $MIOLO, $module, $action, $item, $theme, $event;

		$this->objFornecedor = $MIOLO->GetBusiness($module, 'fornecedor');
		$this->Form('Cadastrar Fornecedor');
                $this->defaultButton = false;
		$this->page->addJsCode(file_get_contents(dirname(__FILE__) . '/../../ui/js/mask.js'));
                $this->page->addJsCode(file_get_contents(dirname(__FILE__) . '/../../ui/js/maskMoney.js'));
		$this->EventHandler();
	}

/**
 * CreateFields
 *
 * @access public
 * @return void
 */
	public function CreateFields() {
		$fields = array(
			array(
				new MTextField('cnpj', $this->objFornecedor->cnpj, 'CNPJ', 22),
				new TextField('nome', $this->objFornecedor->nome, 'Nome Fantasia', 100),
				new TextField('razaosocial', $this->objFornecedor->razaosocial, 'Razão Social', 100),
			),
			array(
				new MTextField('endereco', $this->objFornecedor->endereco, 'Endereço', 50),
				new TextField('numero', $this->objFornecedor->numero, 'Número', 15),
				new TextField('bairro', $this->objFornecedor->bairro, 'Bairro', 15),
				new MTextField('complemento', $this->objFornecedor->complemento, 'Complemento', 50),
				new TextField('cep', $this->objFornecedor->cep, 'CEP (apenas números)', 15),
//			),
//			array(
				new MLookupTextField('lkpMunicipio', '', 'Município', 40, NULL, NULL, NULL, 'common', 'municipio'),
				new HiddenField('idMunicipio', '', 'idMunicipio'),
			),
			array(
				new TextField('contato', $this->objFornecedor->contato, 'Contato', 30),
			),
			array(
				new TextField('fax', $this->objFornecedor->fax, 'Fax', 15),
				new TextField('telefone', $this->objFornecedor->telefone, 'Telefone', 15),
				new TextField('celular', $this->objFornecedor->celular, 'Celular', 15),
				new TextField('email', $this->objFornecedor->email, 'Email', 30),
			),
		);

		$this->SetFields($fields);

		$this->cnpj->addAttribute('maxlength', '18');
		$this->cnpj->addAttribute('onKeyUp', 'makeMask(this, \'##.###.###/####-##\');');

		$this->cep->addAttribute('maxlength', '8');
		$this->cep->addAttribute('onKeyUp', 'makeMask(this, \'########\');');

//		$this->SetFieldAttr('lkpMunicipio', 'module', 'common');
//		$this->SetFieldAttr('lkpMunicipio', 'item', 'municipio');
//		$this->SetFieldAttr('lkpMunicipio', 'event', 'filler');
//		$this->SetFieldAttr('lkpMunicipio', 'related', 'idMunicipio,lkpMunicipio');

		$buttons = Array(
			new FormButton('btnCadastrar', 'Cadastrar')
		);
		$this->SetButtons($buttons);

		$validators = array(
			new MCNPJValidator('cnpj', '', 'required', 'Informe um CNPJ Válido'),
			new MRequiredValidator('cnpj', '', 18),
			new MRequiredValidator('nome', '', 100),
			new MRequiredValidator('razaosocial', '', 100),
			new MRequiredValidator('telefone', '', 100),
			new MRequiredValidator('email', '', 100),
		);
		$this->SetValidators($validators);
	}

/**
 * btnCadastrar_click
 *
 * @global string $module
 * @global string $action
 * @access public
 * @return void
 */
	public function btnCadastrar_click() {
		global $module, $action;

		try {
			$this->objFornecedor->setData($this->getData());
			$this->objFornecedor->save();
			$this->objFornecedor->Log(OP_INS, "Fornecedor criado. " . ", idFornecedor: " . $this->objFornecedor->idFornecedor);

			$action = $this->manager->GetActionURL($module, 'main:fornecedor:find');
			$this->manager->information("Inclusão de fornecedor efetuada com sucesso.", $action);
		} catch (Exception $e) {
			$this->manager->Error($e->getMessage());
		}
	}

}