<?
class frmRepTomadaDeConta extends Form
{
	var $objBolsa;

	function frmRepTomadaDeConta()
	{
		global $MIOLO, $module, $self, $page;

		$this->Form('Relat贸rio de Tomada de Conta');
		$this->EventHandler();
	}

	function CreateFields()
	{
		global $MIOLO, $action,$auth;

		$fields = Array(
			new calendarfield('dataInicio',date('d/m/Y'),'Data Inicial',10,'informe a data inicial do relat贸rio.'),
			new calendarfield('dataFim',date('d/m/Y'),'Data Final',10,'informe a data final do relat贸rio.'),
			new HiddenField('hidGera','')
		);

		$this->SetFields($fields);
		
		$uo = $this->manager->GetBusiness('adm','uo');
        $login = $this->manager->GetLogin();
        $idUsuario = $login->idkey;
		$uoRequisitante = $uo->listByUsuario($idUsuario);
		
        if (count($uoRequisitante->result) == 1)
		{
			$idUoRequisitante = $uoRequisitante->result[0][0];           	
		}
        else
        {
			$this->addField(new Selection('idUoRequisitante','','UO',$uoRequisitante->result));
			$this->setFieldAttr('idTipoReq','readonly',true);			
        }
		
		$buttons = Array
		(
			new FormButton('btnGerarRelatorio', 'Gerar Relat贸rio','PDF')
		);

		$this->SetButtons($buttons);
	}

	function btnGerarRelatorio_click()
	{
		global $MIOLO,$module;
	
		// identifica o idsetor (almoxarifado) do operador
		$login = $MIOLO->GetLogin();
		$usuario = $MIOLO->GetBusiness('common','usuario');
		$usuario->GetById($login->idkey);
		$idsetoralmox = $usuario->GetSetorProvimento();

		$dataInicio = $this->GetFieldValue('dataInicio');
		$dataFim = $this->GetFieldValue('dataFim');
		
		$ui = $MIOLO->GetUI();

	  	$report = $ui->GetReport($module,'repTomadaDeConta',array('idUoRequisitante'=>$idUoRequisitante,'dataInicio'=>$dataInicio,'dataFim'=>$dataFim));

  		$report->Generate();	
	}	
}
?>
