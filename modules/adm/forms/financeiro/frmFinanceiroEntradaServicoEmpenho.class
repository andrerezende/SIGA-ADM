<?
class frmFinanceiroEntradaServicoEmpenho extends MCompoundForm
{
    protected $empenho;
    function __construct()
    {
        global $MIOLO,$item;
        $this->empenho = $MIOLO->getBusiness('adm','empenho',$item);
		parent::__construct("Empenho {$this->empenho->numero}");
        $this->EventHandler();
    }
    function CreateFields()
    {
        global $item;
		$cf = new MCurrencyFormatter();
        // info
        $tipo = array("OR"=>"Original","CO"=>"Complemento","CA"=>"Complementação");
        $tg = $this->manager->getBusiness('common','tabelageral');
        $this->empenho->getEmpenhado();
        $this->empenho->empenhado[0]->getLicitacao();
        $this->empenho->getFornecedor();
        $this->_info[]	= new MTextLabel('numeroEmpenho',$this->empenho->numero,'Empenho');
        $this->_info[]	= new MTextLabel('status',strtoupper($tg->ListByTabela('AD_EMPENHOSTATUS')->result[$this->empenho->status-1][1]),'Status',array(2=>"EMPENHADO"));
        $this->_info[]	= new MTextLabel('tipo',strtoupper($tipo[$this->empenho->tipoEmpenho]),'Tipo');
        $this->_info[]	= new MTextLabel('numeroLicitacao',$this->empenho->empenhado[0]->itensLicitacao->licitacao->numero,'Licitação');
        $this->_info[]	= new MTextLabel('fornecedor',$this->empenho->fornecedor->instituicao->nome,'Fornecedor');
        $this->_info[]	= new MTextLabel('data',$this->empenho->dataEmpenho,'Data');
        $this->_info[]	= new MTextLabel('txtValor',$cf->formatWithSymbol($this->empenho->valorSaldo),'Saldo');
        $this->empenho->retrieveAssociation('notaFiscal');
        if (is_array($this->empenho->notaFiscal))
        {
            $this->_form[] = $f = $this->manager->GetUI()->GetGrid('adm','gridFinanceiroNotaFiscal',$this->empenho);
        }
        if (Form::getFormValue('idNotaFiscal'))
        {
            $this->_form[] = $f = $this->manager->GetUI()->GetGrid('adm','gridFinanceiroNotaFiscalItem',$this->empenho);
            if (Form::getFormValue('idItemNota'))
            {
                $itemNota = $this->manager->getBusiness('adm','itemnota',Form::getFormValue('idItemNota'));
                $itemNota->retrieveAssociation('empenhado');
                $this->_form[] = $f = $this->manager->GetUI()->GetForm('adm','frmFinanceiroEntradaServicoRequisicoes',$itemNota,'financeiro');
            }
        }
        else
        {
            if ($this->empenho->valorSaldo && in_array($this->empenho->status,array('B',6)))
            {
                $this->_form[] = $f = $this->manager->GetUI()->GetForm('adm','frmFinanceiroEntradaServico',$this->empenho,'financeiro');
            }
        }
        
        $buttons = array(
            new MButton('btnParcelar','Parcelar Empenho',$this->manager->GetActionURL('adm','main:financeiro:entradaservico',$item,array('event'=>'btnParcelar:click'))),
            new MButton('btnFinalizar','Finalizar Empenho',$this->manager->GetActionURL('adm','main:financeiro:entradaservico',$item,array('event'=>'btnFinalizar:click'))),
        );
        $this->setButtons($buttons);
        $this->setButtonAttr('btnParcelar','visible',false);
        $this->setButtonAttr('btnFinalizar','visible',false);
        if ($this->empenho->notaFiscal)
        {
            foreach ($this->empenho->notaFiscal as $nota)
            {
                if ($nota->isContabilizado() && $this->empenho->valor != $this->empenho->valorEntregue && $this->empenho->status == 'B')
                {
                    $this->setButtonAttr('btnParcelar','visible',true);
                }
            }
        }
        if ($cf->toDecimal($this->empenho->valor) == $cf->toDecimal($this->empenho->valorEntregue) && ($this->empenho->status == 'B' || $this->empenho->status == 6))
        {
            $this->setButtonAttr('btnFinalizar','visible',true);
            $this->setButtonAttr('btnParcelar','visible',false);
        }
    }
    function btnFinalizar_click()
    {
        global $item;
        try 
        {
            $this->empenho->status = 3;
            $this->empenho->beginTransaction();
            $this->empenho->save();
            $this->empenho->Log(OP_UPD,"Empenho {$this->empenho->idEmpenho} finalizado com sucesso.");
            $this->empenho->endTransaction();
        }
        catch(Exception $e) {$this->manager->Error($e->getMessage());}
        $go = $this->manager->GetActionURL('adm','main:financeiro:entradaservico',$item);
        $this->manager->Information("Empenho {$this->empenho->numero} finalizado com sucesso.",$go);
    }
    function btnParcelar_click()
    {
        global $item;
        try 
        {
            $this->empenho->status = 6;
            $this->empenho->beginTransaction();
            $this->empenho->save();
            $this->empenho->Log(OP_UPD,"Empenho {$this->empenho->idEmpenho} parcelado com sucesso.");
            $this->empenho->endTransaction();
        }
        catch(Exception $e) {$this->manager->Error($e->getMessage());}
        $go = $this->manager->GetActionURL('adm','main:financeiro:entradaservico',$item,array('form'=>'entradamaterial','idEmpenho'=>Form::getFormValue('idEmpenho')));
        $this->manager->Information("Empenho {$this->empenho->numero} parcelado com sucesso.",$go);
    }
 }
?>
