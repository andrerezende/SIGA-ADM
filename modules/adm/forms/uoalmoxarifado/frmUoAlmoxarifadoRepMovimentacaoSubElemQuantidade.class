<?php
class frmUoAlmoxarifadoRepMovimentacaoSubElemQuantidade extends MForm {

	var $uoalmoxarifado;

	function __construct($uoalmoxarifado) {
		global $MIOLO, $module, $self;
		$this->uoalmoxarifado = $uoalmoxarifado;
		parent::__construct('Relatório de Movimentação de Almoxarifado / SubElemento por Quantidade');
		$this->eventHandler();
	}

	function CreateFields() {
            /*
		$fields = array (
			new MCalendarField('dataInicio', date('d/m/Y'), 'Data Inicial', 10, 'informe a data inicial do relatório.'),
			new MCalendarField('dataFim', date('d/m/Y'), 'Data Final', 10, 'informe a data final do relatório.'),
		);
		$this->setFields($fields);
             */
            // 28-10-2011 - Daniel Bonfim
            $fields = array(
                new MSelection('mesReferencia', '','Mês referência',$this->geraMeses()),
                new MSelection('anoReferencia', '','Ano referência',$this->geraAnos()),
            );
            $this->setFields($fields);
            
		$buttons = array (
			//new MButton('btnRelatorio', 'Gerar Relatório', 'PDF'),
                    new MButton('btnRelatorio', 'Gerar Relatório'),
		);
		$this->setButtons($buttons);
	}
        
        // 28-10-2011 - Daniel Bonfim
        public function geraMeses() {
            global $MIOLO;
            $meses = array(
                1 => 'Janeiro',
                2 => 'Fevereiro',
                3 => 'Março',
                4 => 'Abril',
                5 => 'Maio',
                6 => 'Junho',
                7 => 'Julho',
                8 => 'Agosto',
                9 => 'Setembro',
                10 => 'Outubro',
                11 => 'Novembro',
                12 => 'Dezembro',
            );
            return $meses;
        }
        // 28-10-2011 - Daniel Bonfim
            public function geraAnos() {
                $anos = array();
                $anoAtual = date('Y');
                $anoInicial = 1970;
                for ($i = $anoAtual; $i >= $anoInicial; --$i) {
                    $anos[(int) $i] = (int) $i;
                }
                return $anos;
            }

	function GeneratePageHeader($report) {
		$data = $this->getData();
		$date = date('d/m/Y');
		$x0 = $report->pdf->left - 5;
		$x1 = $report->pdf->right - 5;
		$h = $report->pdf->getFontHeight(10);
		$header = $report->pdf->openObject();
		$report->pdf->saveState();
		$report->pdf->addPngFromFile($this->manager->getUI()->GetImageSrc('logonet.png', 'adm'), $x0, 760, 50, 50);
		$alturaCabecalho = $x0 + 70;
		$report->pdf->SetStrokeColor(0, 0, 0);
		$report->pdf->addText($alturaCabecalho, 800, 9, "UNIVERSIDADE FEDERAL DE JUIZ DE FORA                            {$this->uoalmoxarifado->nome}");
		$report->pdf->addText($alturaCabecalho, 800 - $h, 9, "SETOR DE ESTOQUE                                                                   TIPO DE MATERIAL: CONSUMO");
		$report->pdf->addText($alturaCabecalho, 800 - $h - $h, 9, "COORDENADORIA DE SUPRIMENTOS                                       PERÍODO: {$data->dataInicio} A {$data->dataFim}");
		$report->pdf->addText($alturaCabecalho, 800 - $h - $h - $h, 9, "RELATÓRIO DE MOVIMENTAÇÃO DE ALMOXARIFADO            DATA:{$date}");
		$report->pdf->restoreState();
		$report->pdf->closeObject();
		$report->pdf->addObject($header, 'all');
		$report->pdf->ezSetDy(+15);
	}

	function btnRelatorio_click() {            
            $mesReferencia = Form::getFormValue('mesReferencia');
            $anoReferencia = Form::getFormValue('anoReferencia');
            
            // 22-12-2011 - Daniel Bonfim
            $tipo = "SUBELEMENTO";
            $filtradoPor = "QUANTIDADE";
        
            if(!$mesReferencia) {
                $this->addError("Selecione o mês");
                return;
            }
            if(!$anoReferencia) {
                $this->addError("Selecione o ano");
                return;
            }

            $idUoAlmoxerifado = $this->uoalmoxarifado->idUo;
            header("Location: http://".$_SERVER['HTTP_HOST']."/relatorios2/repRMA.php?tipo=$tipo&filtradoPor=$filtradoPor&idUoAlmoxerifado=$idUoAlmoxerifado&mes=$mesReferencia&ano=$anoReferencia");
            
            /*
		$k = new MKrono();
		switch (true) {
			case (!Form::getFormValue('dataInicio')):
				$this->addInfo('Selecione a data inicial.');
				return;
			case (!Form::getFormValue('dataFim')):
				$this->addInfo('Selecione a data final.');
				return;
		}
		$ui = $this->manager->GetUI();
		$report = $ui->GetReport('adm', 'repUoAlmoxarifadoMovimentacaoQuantidades', $this->uoalmoxarifado);
		$report->Generate();
             * 
             */

	}
}