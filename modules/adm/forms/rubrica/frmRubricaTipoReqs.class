<?
class frmRubricaTipoReqs extends Form
{
	protected $objRubrica;
	
    function __construct($objRubrica)
    {
		$this->objRubrica = $objRubrica;
        $this->Form('Tipo Reqs.');
        $this->EventHandler();
    }

    function CreateFields()
    {
       global $MIOLO;
       
       $objTipoReq = $MIOLO->GetBusiness('adm','tiporeq');
       $tipoReqs = $objTipoReq->ListAll();
       $fields = array
			(
	           new MSelection('tipoReqs','','Tipo da Requisição',$tipoReqs->result),
	           $grid,
	        );
		
        $this->SetFields($fields);
		
		$buttons = array
			(
        	   new FormButton('btnSalvar', 'Salvar')
            );
		$this->SetButtons($buttons);

		$validators = array
			(
			   new RequiredValidator('idRubrica'),
			   new RequiredValidator('descricao'),
		    );
		$this->SetValidators($validators);
    }
	public function btnSalvar_click()
	{
		global $MIOLO;
		$idTipoReq = $this->GetFormValue('tipoReqs');
		$objReqRubrica = $MIOLO->GetBusiness('adm','reqrubrica');
		$objReqRubrica->idRubrica = $this->objRubrica->idRubrica;
		$objReqRubrica->idTipoReq = $idTipoReq;
		
		try
		{
			$objReqRubrica->save();
			$objReqRubrica->Log(OP_UPD,"Dados de rubrica modificados");
			$go = $MIOLO->GetActionURL($module,$self,$this->objRubrica->idRubrica,array('form'=>'tiporeqs'));
			$this->page->Redirect($go);
		}
		catch (Exception $e)
		{
			$this->addError($e->getMessage());
		}
	}
 }
?>