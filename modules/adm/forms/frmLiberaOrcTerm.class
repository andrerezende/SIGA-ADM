<?
class frmLiberaOrcTerm extends Form
{
	
	var $objTransfOrcUO;

    function __construct($objTransfOrcUO)
    {
$this->objTransfOrcUO = $objTransfOrcUO;
		global $MIOLO, $module;

		// Titulo do Form		
        $this->Form('Liberação de Termo de Orçamento');

	$this->EventHandler();
    }
    
	function CreateFields()
	{

global $MIOLO;

$ui = $MIOLO->GetUI();

//$Uo = $MIOLO->GetBusiness('adm','uo');
$Inst = $MIOLO->GetBusiness('common','instituicao');
//$ListaUos = $Uo->listUosOrdemNome();
$ListaCampus = $Inst->listCampus();
//var_dump($ListaCampus->result);

        $fields = array(
				//new MSeparator('UO de Origem'),
				array(
				new MSelection('campus','','Campus',$ListaCampus->result), 
			//	new MLookupTextField('lkpRubricaOrigem', '', 'Rubrica', 11),
				new MTextField('ano', date("Y"), 'Ano', 4),
					
					),
		
				array(
				new MSelection('licitacao','','Licitação',array()),
				new HiddenField('idlicitacao',''),
				new HiddenField('idusuario','')
			//	new MLookupTextField('lkpRubricaDestino', '', 'Rubrica', 11),				
			//	new MTextField('anodestino', date("Y"), 'Ano', 5),
			
					),
				//new MSeparator(''),	
              //  new MTextField('valor','','Valor',3)              

            		);


	$buttons = array(
new MButton('btnExibir', 'Exibir'),
//new MButton('btnSalvar', 'Transferir'),
new MButton('btnExibirItem', 'Exibir Itens'),
new MButton('btnVoltar', 'Voltar'),
new MButton('btnAlterar', 'Alterar Selecionados'),
	           	);

        $this->SetButtons($buttons);
	$this->setFields($fields);

	$this->SetButtonAttr('btnSalvar','visible',false);
	$this->SetFieldAttr('valor','visible',false);
	$this->SetButtonAttr('btnAlterar','visible',false);
	$this->SetButtonAttr('btnExibirItem','visible',false);
	/*//Lookup Rubrica da UO de Origem
	  $this->SetFieldAttr('lkpRubricaOrigem','module','adm');
        $this->SetFieldAttr('lkpRubricaOrigem','item','rubrica');
        $this->SetFieldAttr('lkpRubricaOrigem','event','filler');
        $this->SetFieldAttr('lkpRubricaOrigem','related','lkpRubricaOrigem');
	//Lookup Rubrica da UO de Destino	
	  $this->SetFieldAttr('lkpRubricaDestino','module','adm');
        $this->SetFieldAttr('lkpRubricaDestino','item','rubrica');
        $this->SetFieldAttr('lkpRubricaDestino','event','filler');
        $this->SetFieldAttr('lkpRubricaDestino','related','lkpRubricaDestino');
	//Setar ano como somente leitura
		$this->SetFieldAttr('anoorigem','readonly',true);
		$this->SetFieldAttr('anodestino','readonly',true);
		*/
	}


	

function btnExibir_click()
{
    global $MIOLO;
	
	//
	$OrcamentoTermo = $MIOLO->GetBusiness('adm','orcamentotermo');
	$Inst = $MIOLO->GetBusiness('common','instituicao');
	
	
	$Campus 	= 	$this->GetFieldValue('campus');
	$Ano = $this->GetFieldValue('ano');
	//$Campus = $Inst->GetInstByUG($UG);
	//var_dump($Campus);
	if ($Ano != null)
	{
	$Licita = $OrcamentoTermo->listLicitacaoByCampusAndAno(trim($Campus),trim($Ano));
	}else
	{
	$Licita = $OrcamentoTermo->listLicitacaoByCampus(trim($Campus));
	}
//	$UoDestino 	= 	$this->GetFieldValue('uodestino');
/*	$RubricaOrigem 	=	trim($this->GetFieldValue('lkpRubricaOrigem'));
	$RubricaDestino =	trim($this->GetFieldValue('lkpRubricaDestino'));
*/

	//var_dump($Licita);
/*	$this->exibirSaldo($UoOrigem,'UO de Origem');
	new MSeparator('-');	
	$this->exibirSaldo($UoDestino,'UO de Destino');
*/	$OrcamentoInterno = $MIOLO->GetBusiness('adm','orcamentointerno');
	//var_dump('UO',$UoOrigem,'ANO',$AnoOrigem,'RUB',$RubricaOrigem);
//	$saldo = $OrcamentoInterno->getSaldo();
	
	//var_dump($Licita->result[0]);
	
	//$this->SetFieldAttr('saldoorigem','label',);
	//$OrcamentoInterno->getSaldoRubrica(
	if ($Licita->result != null)
	{
	$this->SetFieldAttr('licitacao','options',$Licita->result);
	$this->SetButtonAttr('btnExibirItem','visible',true);
	$this->SetButtonAttr('btnExibir','visible',false);
	$this->SetFieldAttr('ano','visible',false);
	}
	//$this->SetFieldAttr('lkpRubricaOrigem','readonly',true);
	//$this->SetFieldAttr('uodestino','readonly',true);
	//$this->SetFieldAttr('lkpRubricaDestino','readonly',true);
	
//	$this->SetFieldAttr('valor','visible',true);
 
 
//var_dump($this->GetFieldValue('lkpRubricaOrigem'));
 }

 
	function btnExibirItem_click()
 
	{
		global $MIOLO;
		
		$OrcamentoTermo = $MIOLO->GetBusiness('adm','orcamentotermo');
		$tabelageral = $MIOLO->GetBusiness('common','tabelageral');
		$Licitacao = $MIOLO->GetBusiness('adm','licitacao');
		
		
		$IdLicitacao = $this->GetFieldValue('licitacao');
		$this->SetFieldValue('idlicitacao',$IdLicitacao);
		
		$NumLicita = $Licitacao->getById($IdLicitacao);
		//var_dump($NumLicita->numero);
		//$num = $this->licitacao;
		//var_dump($num);
		$IdInstituicao = $this->GetFieldValue('campus');
		
		$query = $OrcamentoTermo->listItensByLibLicitacao($IdLicitacao,$IdInstituicao);
		
		if (is_array($query->result))
        {
            foreach ($query->result as $key => $rs)
            {
			$desc = $tabelageral->GetDescricao('AD_STATUSORCTERM',$query->result[$key][3]);
			 $query->result[$key][3] = $desc->result[0][0];
			
//            	$query->result[$key][6] = $cf->formatWithSymbol($query->result[$key][6]);
  //              $query->result[$key][7] = $cf->formatWithSymbol($rs[5]*$cf->toDecimal($rs[6]));
            }
        }

		
		
	          $columns = array(
            new ObjectGridColumn('rubrica->descricao','Item','left', false,'15%',true),
			new ObjectGridColumn('ano','Usuário','left', false,'30%',true),
            new ObjectGridColumn('credito','Data-Limite','left', false,'10%',true),
            new ObjectGridColumn('debito','Status','left', false,'10%',true),
            
		       		       );
				
				
				$myGrid = new MGrid($query->result,$columns,'',0);
		$myGrid->AddActionSelect();
		$myGrid->SetTitle("Licitação $NumLicita->numero");
		
		$this->addField($myGrid);
	//	$this->addField();
		$FieldsLiberar = array
		(
		new MSpacer(3),
		new CalendarField('datalimite','','Data-Limite','10','Informe a data-limite para Digitação dos termos '),
		new MLookupTextField('lkpLogin','','Login',20),
	//	new MLookupFieldValue('lkpNome','','Nome',40),
		);
		
		$this->addFields($FieldsLiberar);
		
		  $this->SetFieldAttr('lkpLogin','module','common');
	   $this->SetFieldAttr('lkpLogin','item','usuario');
	   $this->SetFieldAttr('lkpLogin','event', 'filler');
	   $this->SetFieldAttr('lkpLogin','related', 'idusuario,lkpLogin');
/*	   $this->SetFieldAttr('lkpNome','module','common');
	   $this->SetFieldAttr('lkpNome','item','pessoa');
	   $this->SetFieldAttr('lkpNome','event', 'filler');
	   $this->SetFieldAttr('lkpNome','related', 'hidIdPessoa,lkpNome');
	*/	$this->SetFieldAttr('ano','visible',false);
		$this->SetFieldAttr('licitacao','visible',false);
		$this->SetFieldAttr('campus','visible',false);
		$this->SetButtonAttr('btnExibir','visible',false);
		$this->SetButtonAttr('btnAlterar','visible',true);
	}
 
 
  function btnAlterar_click()
  
  
  {
  global $MIOLO, $module, $item, $action, $theme;
  
  $OrcamentoTermo = $MIOLO->GetBusiness('adm','orcamentotermo');
  
  $selected = $this->GetFormValue('select');
  $IdLicitacao = $this->idlicitacao->value;
  
  $DataLimite = $this->GetFormValue('datalimite');
  $IdUsuario = $this->GetFormValue('idusuario');
  
	if ($IdUsuario == null and $DataLimite == null)
	{
	}else
	{
    if ($selected != null)
	{
	foreach ($selected as $key => $rs)
            {				//Item            	//$selected[$key][0]); 
                $OrcamentoTermo->LiberarOrcTerm($IdLicitacao,$selected[$key],$DataLimite,$IdUsuario);
				//var_dump('Item OK',$selected[$key]);
            }
		$MIOLO->Information("Itens Alterados com Sucesso");	
	}
  }
  //var_dump($IdLicitacao);
  //var_dump($selected);
  }
 function btnSalvar_click()
{ 
	global $MIOLO;
	
	$UoOrigem 	= 	$this->GetFieldValue('uoorigem');
	$UoDestino 	= 	$this->GetFieldValue('uodestino');
	$RubricaOrigem 	=	trim($this->GetFieldValue('lkpRubricaOrigem'));
	$RubricaDestino =	trim($this->GetFieldValue('lkpRubricaDestino'));
	$AnoOrigem = $this->GetFieldValue('anoorigem');
	$AnoDestino = $this->GetFieldValue('anodestino');
	
	$Uo = $MIOLO->GetBusiness('adm','uo');
//	var_dump($UoOrigem,$RubricaOrigem,$AnoOrigem);
	$UoOrigem = 	$Uo->GetById($UoOrigem);
	$UoDestino = $Uo->GetById($UoDestino);
	
		            try 
            {
                
				$credito = $this->GetFieldValue('valor');
			//	var_dump($credito);
				$UoOrigem->removeCredito($RubricaOrigem,$credito,$AnoOrigem);
				$UoOrigem->save();
				$UoDestino->addCredito($RubricaDestino,$credito,$AnoDestino);
				$UoDestino->save();
				$this->manager->Information("Orçamento interno transferido com sucesso.",$action);
            
            
      
            }
            catch(Exception $e)
            {
                $this->manager->Error("Informe o seguinte erro à equipe do CGCO: ",$e->getMessage());
            }

}
 
 /*
 function exibirSaldo($idUo,$titulo)
	{
	
		//$this->setTitle('Recursos da UO');
		$uos = $this->manager->GetBusiness('adm','uo');
		$saldouo = $uos->GetById($idUo);
		$saldouo->getOrcamentos();
		if ( !$saldouo->orcamento )
		{
				$this->manager->Error("Informe o seguinte erro à equipe do CGCO: Unidade Orçamentária sem recursos",$this->manager->GetActionURL('adm','main:recursos'));
		}
        $columns = array(
            new ObjectGridColumn('rubrica->descricao','Rubrica','left', false,'55%',true),
			new ObjectGridColumn('ano','Ano','left', false,'10%',true),
            new ObjectGridColumn('credito','Credito','left', false,'10%',true),
            new ObjectGridColumn('debito','Debito','left', false,'10%',true),
            new ObjectGridColumn('previsaoDebito','Prev Debito','left', false,'15%',true),
            new ObjectGridColumn('saldo','Saldo','left', false,'10%',true),
        );
		$grid = new ObjectGrid($saldouo->orcamento,$columns,'',0);
		$this->setButtonAttr('btnPost','visible',FALSE);
		$this->addField(new MSeparator($titulo));
		$this->addField(new TextField('nome','','Nome','60'));
		//$this->addField(new TextField('gestor','','Gestor'));
		//new MSeparator('-');
		$this->addField($grid);
		$this->addField(new CurrencyField('saldao',$saldouo->getSaldoTotal(),'Saldo Total Disponível'));
		//	$this->setFieldValue('idUo',$saldouo->idUo);
		$this->setFieldValue('nome',$saldouo->nome);
		//$this->setFieldValue('gestor',$saldouo->gestor->pessoa->nome);
		$this->setFieldAttr('idUo','readonly',TRUE);
		//$this->setFieldAttr('gestor','readonly',TRUE);
		$this->setFieldAttr('nome','readonly',TRUE);
		$this->setFieldAttr('saldao','readonly',TRUE);
		
	}
	*/
 function btnVoltar_click()
    {
		$data = $this->getData();
        $this->setData($data);
    }
}

?>
