<?
MIOLO::Import('modules::adm::forms::valetransporte::frmValeTransportePai');

class frmValeTransporteEditar extends frmValeTransportePai
{

	protected $objValeTransporte;
	
    function __construct($objValeTransporte)
    {
		$this->objValeTransporte = $objValeTransporte;
		$this->Form('Dados do Valor');
        $this->EventHandler();
    }    

    function CreateFields()
    {
        global $MIOLO;
		
//		$this->CommonFields();

//INÍCIO DE MINHA MODIFICAÇÃO:
//Comentei a Linha 20 e acrescentei o código abaixo, para impedir o usuário de editar o campo dataIni, 
//que é chave primária!
	    $this->AddField(new TextLabel('dataIni','','Data Início', '8'));
	    $this->AddField(new MCalendarField('dataFim','','Data Fim', '8'));	   
	    $this->AddField(new TextField('valor','','Valor','5',''));
//FIM DE MINHA MODIFICAÇÃO
		
    	$buttons = array
		   (
        	  new FormButton("btnSalvar","Salvar")
           );
	   $this->SetButtons($buttons);
       $this->SetData();
    }
	
	public function btnSalvar_click()
	{
		$this->objValeTransporte->SetData($this->GetData());
		try
		{
			$this->objValeTransporte->save();
			$this->objValeTransporte->Log(OP_UPD,"Dados do Valor modificados");
			
			$go = $this->manager->GetActionURL('adm','main:valetransporte:find',$this->dataIni);
			$this->manager->information("Dados modificados com sucesso!",$go );
			
		}
		catch (Exception $e)
		{
			$this->addError($e->getMessage());
		}
	}
 }
?>
