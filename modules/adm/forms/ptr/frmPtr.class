<?
/**
 * Form Ptr
 */
class frmPtr extends CompoundForm
{
    public $oid;
    protected $ptr;
    /**
     * Construtor
     */
    function __construct($objPtr)
    {
        global $MIOLO;
        $this->ptr = $objPtr;
        parent::__construct();
        $this->SetClose($MIOLO->GetActionURL('adm','main:ptr:find'));
        $this->SetTitle($this->ptr->idPtr);
        $this->SetIcon($MIOLO->GetUi()->GetImage('adm','default_mini.png'));
    }

    function CreateFields()
    {
        global $MIOLO, $page, $module, $context, $history;

        $ptr = $this->ptr;
        if ($this->oid == NULL) $this->oid = $ptr->idPtr;

// form
        $ui = $MIOLO->GetUI();
        $form = Form::GetFormValue('form');
        switch ($form)
        {
            case 'editar' : 
                $this->_form[0] = $ui->GetForm($module,'frmPtrEditar', $ptr, 'ptr'); 
                break;
            case 'excluir'     : 
                $this->_form[0] = $ui->GetForm($module,'frmPtrExcluir', $ptr, 'ptr'); 
                break;
        }
        if ($this->_form[0])
        {
            $this->_form[0]->SetClose($MIOLO->GetActionURL('adm','main:ptr',$ptr->idPtr));
            $page->SetAction($history->Top('action'));
        }
		
// info
        $this->_info[0] = new TextLabel('txtNome',$this->ptr->descricao,'Descricao');
        $this->_info[1] = new TextLabel('txtPT',$this->ptr->progTrab,'Prog. Trabalho');
      //  $this->_info[3] = new TextLabel('txtUO',$this->ptr->uorcamento,'Unid Orçamentária');

// panel        
        $action = $context->action;
        $this->_panel[0] = $panel = new ActionPanel('pnlCompound','Opções','',false);
        $panel->AddUserAction('ad_ptr_editar',A_EXECUTE,'Editar',$ui->GetImage('adm','edit.png'),'adm',$action, $this->oid, array("form"=>"editar"));
        $panel->AddUserAction('ad_ptr_excluir',A_EXECUTE,'Excluir',$ui->GetImage('adm','excluir.png'),'adm',$action, $this->oid, array("form"=>"excluir"));
 	}
}
?>
