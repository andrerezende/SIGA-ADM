<?
class frmInspecaoVeiculo extends Form
{
    protected $objInspecao;
    function __construct($objInspecao) {
        $this->objInspecao = $objInspecao;
	$this->Form(null);
	$this->EventHandler();
	$this->page->AddJsCode(file_get_contents(dirname(__FILE__) . '/../../ui/js/mask.js'));
        
    }

	function CreateFields()
	{
            
            $componente = $this->manager->GetBusiness('adm', 'componente');
            $inspecaocomponente = $this->manager->GetBusiness('adm', 'inspecaocomponente');
            $conformidade = $this->manager->GetBusiness('adm', 'conformidade');
            $listaComponentes = $componente->comparaFim($this->objInspecao->idInspecao);
            $componente = $componente->GetById(key($listaComponentes));
            $inspecaocomponente = $inspecaocomponente->GetById($this->objInspecao->idInspecao, key($listaComponentes));
            $conformidade = $conformidade->GetById($inspecaocomponente->idConformidadeInicio);
		$fields = array (
        new MPanel('titulo2', 'Inspeção de Veículo'),
	new MSpacer(1),
	new MSeparator(''),
	new MTextLabel('label','Nível Óleo Motor'),
        new TextField('nivelOleoMotor', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('nivelOleoMotorObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Nível Óleo Hidráulico (Freio e Direção)'),
        new TextField('nivelOleoHidraulico', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('nivelOleoHidraulicoObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Nível Água Arref Motor'),
        new TextField('nnivelAguaArref', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('nivelAguaArrefObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Nível Água Limpeza de Pára Brisa'),
        new TextField('nivelAguaLimpeza', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('nivelAguaLimpezaObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','BANCO / ASSENTOS'),
        new TextField('bancosAssentos', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('bancosAssentosObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Assoalho'),
        new TextField('assoalho', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('assoalhoObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Buzina'),
        new TextField('buzina', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('buzinaObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Cinto de Segurança'),
        new TextField('cintoSeguranca', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('cintoSegurancaObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Espelho Retrovisor'),
        new TextField('espelhoRetrovisor', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('espelhoRetrovisorObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Extintor de Incêndio'),
        new TextField('extintorIncendio', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('extintorIncendioObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Macaco / Triângulo'),
        new TextField('macacoTriangulo', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('macacoTrianguloObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Freios de Estacionamento'),
        new TextField('freioEstacionamento', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('freioEstacionamentoObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Pára-Brisas'),
        new TextField('paraBrisa', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('paraBrisaObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Portas(Abrir por Dentro)'),
        new TextField('portas', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('portasObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Pneus / Estepe'),
        new TextField('pneus', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('pneusObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Farol (Luz baixa, alta e estacionamento)'),
        new TextField('farol', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('farolObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Luz de Ré'),
        new TextField('luzRe', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('luzReObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Luz de Freio'),
        new TextField('luzFreio', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('luzFreioObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Pisca Alerta'),
        new TextField('piscaAlerta', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('piscaAlertaObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Limpador de Pára-Brisa(Funcionamento)'),
        new TextField('limpadorParabrisa', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('limpadorParabrisaObs','','','',4,50,''),
	new MSeparator(''),
	new MTextLabel('label','Setas'),
        new TextField('setas', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('setasObs','','','',4,50),
	new MSeparator(''),
	new MTextLabel('label','Travamento Capô'),
        new TextField('travamentoCapo', '', '', 15),
	new MTextLabel('label','Observações'),
	new MultiLineField('travamentoCapoObs','','','',4,50),
	new MSeparator(''),
		);

		$this->SetFields($fields);

		$buttons = array (
			new FormButton('btnNew', 'Conformidade do Motorista')
		);
		$this->SetButtons($buttons);

		$validators = array (
			new RequiredValidator('sigla'),
			new RequiredValidator('descricao'),
		);
		$this->SetValidators($validators);
	}

	function btnNew_click()
	{

			$data = $this->GetData();
			$unidade = $this->manager->GetBusiness('adm','unidade');
			$unidade->SetData($data);
			try
			{
                                $unidade->sigla = strtoupper($unidade->sigla);
				$unidade->descricao = strtoupper($unidade->descricao);
				$unidade->save();
				$unidade->Log(OP_INS,"Nova unidade criada");
                                $go = $this->manager->GetActionURL('adm','main:unidade:',$unidade->sigla);
				$this->manager->Information('Unidade criada com sucesso.',$go);
			}
			catch (Exception $e)
			{
				$this->addError($e->getMessage());
			}
		
	}
}
?>
