<?php
class frmConformidadeMotorista extends Form
{
	protected $objInspecao;
	public $auth;
	public $tries;

        function __construct($objInspecao) {
		$this->objInspecao= $objInspecao;
		$this->Form(null);
		$this->page->AddScript('m_md5.js');
		$this->AddJsCode($this->doChallengeResponse());
		$this->OnSubmit('doChallengeResponse()');
		$this->defaultButton = false;
		if ($this->page->isPostBack()) {
			$this->EventHandler();
		}
	}


	function CreateFields()
	{   
            global $MIOLO;

		$this->auth = $this->manager->auth;
		$challenge = uniqid(rand());
		$ui = $MIOLO->GetUI();
                $manter =  'Sim';
        $options=array('Sim','Não');
            $fields = array(
			new MTextField('uid',$this->auth->login->iduser,'Usuários',20),
			new MPasswordField('pwd','','Senha',20),
                        //new MButton('btnLogin', 'Entrar'),
                       // new MButton('btnConfirmar', 'Confirmar'),
                
                        new MHiddenField('tries', ''),
			new MHiddenField('return_to', ''),
			new MHiddenField('challenge', $challenge),
			new MHiddenField('response', ''),
			new MHiddenField('passwd', ''),
                new MPanel('inspecaoMotorista', 'Confirmar Inspeção'),
            new MTextHeader('header', 1,'Concorda com a inspeção realizada?'),
	    new MRadioButtonGroup('confirmacao', '', $options,$manter), 
				);
            
            $buttons = array(
                new MButton('btnLogin', 'Entrar'),
                new MButton('btnConfirmar', 'Confirmar'),
            );
            $this->SetButtons($buttons);
				$this->SetFields($fields);
                                $this->SetBackgroundColor('white');
		                //$this->AddButton(new MHiddenField('btnLogin', 'Entrar'));
                                $this->inabilitaDadosMotorista(false);
                                $this->inabilitaLogin(true);
                                
                                
	}

        function btnSalvar_click()
	{
		$data = $this->GetData();
		$inspecao = $this->manager->getBusiness('adm','inspecao');
                $inspecao = $this->objInspecao->GetById($this->objInspecao->idInspecao);
                $pree = $this->verificaPreencimento();
                if($pree){
                   $usuario->verifica() ;
		try
		{
			$inspecao->beginTransaction();
                        $inspecao->confirmacao = Form::GetFormValue('confirmacao');
                        $inspecao->endTransaction();
                        $ret = $inspecaoComponete->getInspecao($inspecaoComponete->idComponente,$inspecaoComponete->idInspecao);
                       
		}
		catch (Exception $e)
		{
			$this->AddError($e->GetMessage());
		}
                }
	}
       function verificaPreencimento(){
           $ok = true;
           if($this->GetFieldValue('login') == ''){
               $ok = false;
                    $this->addError("Entre com seu login!");
           }else if($this->GetFieldValue('senha')==''){
                $ok = false;
                    $this->addError("Entre com sua senha!");
           }
           return $ok;
       }
       
       public function btnLogin_click() {
		global $MIOLO;

		$this->GetData();
		$MIOLO->LogMessage('[LOGIN] Validating login information MD5');

		// Max login tries
		$max_tries = 3;

		// autenticar usuário e obter dados do login
		$uid = $this->GetFormValue('uid');
		$pwd = $this->GetFormValue('pwd');              
		$challenge = $this->GetFieldValue('challenge');
		$response = $this->GetFieldValue('response');
                

		if (!$this->LoginPermitted($uid)) {
			$err = 'Acesso não permitido.';
                        $this->AddError($err);
		} else {
                    $senha =md5($pwd);
                    $usuario = $this->manager->GetBusiness('common','usuario');
                    if ($usuario->GetByMotoristaLoginPass($uid,$senha)) {
			//if ($this->auth->Authenticate($uid, $challenge, $response)) {
                            
                            $id = $this->retornaIdUsuario($uid, $this->objInspecao->idInspecao);
                            if($id){
                            //if($this->objInspecao->retornIDaMotorista($this->objInspecao->idMotorista, $this->objInspecao->idInspecao)){
                                $this->objInspecao->beginTransaction();
                                $this->objInspecao->confirmacao = 1;
                                $this->objInspecao->update();
                                $this->objInspecao->endTransaction();
                                $this->inabilitaDadosMotorista(true);
                                $this->inabilitaLogin(false);
                                //$this->interacaoMotorista();
                                //$go = $this->manager->getActionUrl('adm','main:inspecao',$this->objInspecao->idInspecao,array("form"=>"item","idInspecao"=>$this->objInspecao->idInspecao));
                                //$this->page->Redirect($go);
                            // }
                             }else{
                                 $tries = $this->GetFormValue('tries');
                                 if ($tries >= $max_tries) {
					$MIOLO->Error('Erro na identificação do motorista!');
				} else {
					$err = 'Erro na identificação do motorista!' . ' - Restam ' . ( $max_tries - $tries) .
							' ' . 'tentativa(s).';
					$tries++;
					$this->SetFormValue('tries',$tries);
					$pwd = null;
					if ($err) {
						$this->AddError($err);
					}
				}
                             }
			} else {
				$tries = $this->GetFormValue('tries');
				if ($tries >= $max_tries) {
					$MIOLO->Error('Erro na identificação do motorista!');
				} else {
					$err = 'Erro na identificação do motorista!' . ' - Restam ' . ( $max_tries - $tries) .
							' ' . 'tentativa(s).';
					$tries++;
					$this->SetFormValue('tries',$tries);
					$pwd = null;
					if ($err) {
						$this->AddError($err);
					}
				}
			}
		}
	}
        
        public function LoginPermitted($uid) {
                $objUsuario = $this->manager->GetBusiness('common','usuario');
		$ok = $objUsuario->CheckAtivo($uid);
		return $ok;
	}
        
        public function retornaIdUsuario($uid,$idInspecao) {
                $objUsuario = $this->manager->GetBusiness('common','usuario');
                $objInspecao = $this->manager->GetBusiness('adm','inspecao');
                $objMotorista = $this->manager->GetBusiness('adm','motorista');
                
                $idPessoa = $objUsuario->GetByIDUsuarioLoginPass($uid);
                $idMotorista = $objMotorista->GetByIDMotoristaPessoa($idPessoa);
                
                $idUser = $objInspecao->GetByIDMotorista($idInspecao,$idMotorista);
                if($idUser){
                   $ok = true;
                }else{
                   $ok = false; 
                }
                
		return $ok;
        }
        public function isAuthenticated() {
		return $this->auth->isLogged();
	}
       
       function retornaTela(){
           $go = $this->manager->getActionUrl('adm','main:inspecao',$this->objInspecao->idInspecao,array("form"=>"item","idInspecao"=>$this->objInspecao->idInspecao));
           $this->page->Redirect($go);
           
       }
       
       public function doChallengeResponse() {
		$code = "function doChallengeResponse() { \n".
				"  var str = miolo.getElementById('uid').value + \":\" + \n" .
				"        MD5(miolo.getElementById('pwd').value) + \":\" + \n" .
				"        miolo.getElementById('challenge').value; \n".
//				"        miolo.setElementValueById('pwd','');\n".
				"        miolo.setElementValueById('response',MD5(str));\n".
				"  return true;\n".
				"}\n";
		return $code;
	}
        public function interacaoMotorista() {
            $go = $this->manager->GetActionURL('adm', 'inspecao:loginmot', $this->objInspecao->idInspecao);
         $this->page->Redirect($go);
       }
       function inabilitaDadosMotorista($visibilidade) {
        $this->setButtonAttr('btnConfirmar', 'visible', $visibilidade);
        $this->setFieldAttr('inspecaoMotorista', 'visible', $visibilidade);
        $this->setFieldAttr('confirmacao', 'visible', $visibilidade);
        $this->setFieldAttr('header', 'visible', $visibilidade); 
    }
    function inabilitaLogin($visibilidade) {
        $this->setButtonAttr('btnLogin', 'visible', $visibilidade);
        $this->setFieldAttr('uid', 'visible', $visibilidade);
        $this->setFieldAttr('pwd', 'visible', $visibilidade);
    }
    
    public function btnConfirmar_click() {
        global $MIOLO;
        $session = $MIOLO->getSession();
	$sidUo = $session->get('idUo');
        $inspecao = $this->manager->getBusiness('adm', 'inspecao');
                    $inspecao = $this->objInspecao->GetById($this->objInspecao->idInspecao);
                    if($this->objInspecao->idSituacaoInspecao == 3 || $this->objInspecao->idSituacaoInspecao == 2){
                    if(Form::GetFormValue('confirmacao') == 'Sim'){
                    //$inspecao->dataHoraFim = date('d/m/Y H:i');
                    //$inspecao->setStatus(5);
                    $inspecao->confirmacao = 2;
                    $inspecao->update();
                    $this->manager->information("Inspeção FINAL concluida com sucesso: " . $this->objInspecao->idInspecao, $this->manager->getActionUrl('adm', 'main:inspecao:final',$sidUo));
                    
                    }else if(Form::GetFormValue('confirmacao') == 'Não'){
                    //$inspecao->dataHoraFim = date('d/m/Y H:i');
                    //$inspecao->setStatus(5);
                    $inspecao->confirmacao = 3;
                    $inspecao->update();
                    $this->manager->information("Inspeção FINAL concluida com sucesso: " . $this->objInspecao->idInspecao, $this->manager->getActionUrl('adm', 'main:inspecao:final',$sidUo));
                    
                    }
                    }else  if($this->objInspecao->idSituacaoInspecao == 5 || $this->objInspecao->idSituacaoInspecao == 4){
                        if(Form::GetFormValue('confirmacao') == 'Sim'){
                    //$inspecao->dataHoraFim = date('d/m/Y H:i');
                    //$inspecao->setStatus(5);
                    $inspecao->confirmacaofinal = 2;
                    $inspecao->update();
                    $this->manager->information("Inspeção FINAL concluida com sucesso: " . $this->objInspecao->idInspecao, $this->manager->getActionUrl('adm', 'main:inspecao:final',$sidUo));
                    
                    }else if(Form::GetFormValue('confirmacao') == 'Não'){
                    //$inspecao->dataHoraFim = date('d/m/Y H:i');
                    //$inspecao->setStatus(5);
                    $inspecao->confirmacaofinal = 3;
                    $inspecao->update();
                    $this->manager->information("Inspeção FINAL concluida com sucesso: " . $this->objInspecao->idInspecao, $this->manager->getActionUrl('adm', 'main:inspecao:final',$sidUo));
                    
                    }
                    }
    }
}
?>
