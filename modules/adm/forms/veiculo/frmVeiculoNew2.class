<?
class frmVeiculoNew2 extends MForm
{
        
        
	function __construct()
	{                
		parent::__construct('Patrimonio');
		$this->EventHandler();
	}

	function CreateFields()
	{
            global $MIOLO;    
            
            $id = $_GET['item'];            
            $tabelaGeral = $this->manager->getBusiness('common','tabelageral');
            $tipoVeiculos = $tabelaGeral->listByTabela('AD_TIPOVEICULO')->result;
            $tipoCombustiveis = $tabelaGeral->listByTabela('AD_TIPOCOMBUSTIVEL')->result;            
            $array1 = array('A', 'B', 'C', 'D', 'E');
            $array2 = array('A', 'B', 'C', 'D', 'E');
            $categoria = array_combine($array1, $array2);
//            $arrayEstados = array("AC", "AL", "AM", "AP",  "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO");
            $estados =  array("AC"=>"Acre", "AL"=>"Alagoas", "AM"=>"Amazonas", "AP"=>"Amapá","BA"=>"Bahia","CE"=>"Ceará","DF"=>"Distrito Federal","ES"=>"Espírito Santo","GO"=>"Goiás","MA"=>"Maranhão","MT"=>"Mato Grosso","MS"=>"Mato Grosso do Sul","MG"=>"Minas Gerais","PA"=>"Pará","PB"=>"Paraíba","PR"=>"Paraná","PE"=>"Pernambuco","PI"=>"Piauí","RJ"=>"Rio de Janeiro","RN"=>"Rio Grande do Norte","RO"=>"Rondônia","RS"=>"Rio Grande do Sul","RR"=>"Roraima","SC"=>"Santa Catarina","SE"=>"Sergipe","SP"=>"São Paulo","TO"=>"Tocantins");
            
            $instituicao = $MIOLO->GetBusiness('common','instituicao');
            $idinstituicao = $this->manager->GetBusiness('common','instituicao');
            $instituicao = $idinstituicao->listAll();  
            $objItemPatrimonio = $this->manager->getBusiness('adm','itempatrimonio', $id);            
            $objNotaFiscal = $this->manager->getBusiness('adm','itempatrimonio', $objItemPatrimonio->idNotaFiscal);            
                
            $fields = array(
                        new MHiddenField('iditem', $objItemPatrimonio->idItemPatrimonio),
                        new TextLabel('iditemtx', $objItemPatrimonio->idItemPatrimonio, 'Id Patrimonio'),
                        new TextLabel('descricao', $objItemPatrimonio->descricao, 'Descrição'),
                        new TextLabel('marcaModelo', $objItemPatrimonio->marcaModelo, 'Marca/Modelo'),
                        new TextLabel('notaFiscal', $objItemPatrimonio->notafiscal, 'Nota Fiscal'),
                        new TextLabel('dataNotaFiscal', $objItemPatrimonio->dataNotaFiscal, 'Data da Nota'),
                        new TextLabel('dataAteste', $objNotaFiscal->dataAteste, 'Data de Ateste'),
                        new TextLabel('cnpj', $objItemPatrimonio->cnpj, 'CNPJ'),
                        new TextLabel('fornecedor', $objNotaFiscal->fornecedor, 'Fornecedor'),
                        new MSpacer(),           
                        new MBox('Veículo'),
                        new MTextField('placa','','Placa','7','Máx. 7 caracteres'),
			new MSelection('tipoVeiculo',1,'Tipo Veiculo',$tipoVeiculos),
                        new MTextField('cor', '', 'Cor', '20', 'Máx. 20 caracteres'),                        
			new MTextField('renavam','','Renavam','12','Máx. 12 caracteres'),
			new MTextField('chassi','','Chassi','20','Máx. 17 caracteres'),			
                        new MSelection('combustivel',1,'Combustível',$tipoCombustiveis),
			new MTextField('anoFab','','Ano Fabricação','4','Máx. 4 números'),
			new MTextField('anoMod','','Ano Modelo','4','Máx. 4 números'),
                        new MSpacer(),                    
                        new MBox('CRLV'),
                        new MTextField('exercicio','','Exercício','4','Máx. 4 números'),
//                        new MTextField('uf','','UF', '5'),
                        new MSelection('uf', 'BA','UF', $estados),
                        new MSelection('cat', 'B','Categoria', $categoria),
                        new MTextField('cnpjcpf','','CNPJ/CPF', '13','Máx. 13 números'),
                        new MTextField('nome','','Nome', '25'),
                        new MSelection('ativo', 'S', 'Ativo', array('N' => 'Não', 'S' => 'Sim')),
		);
                        
            $this->SetFields($fields);
            
            $this->placa->addAttribute('maxlength','7');
            $this->renavam->addAttribute('maxlength','12');
            $this->chassi->addAttribute('maxlength','20');            
            $this->anoFab->addAttribute('maxlength','4');
            $this->anoMod->addAttribute('maxlength','4');
            $this->cor->addAttribute('maxlength','20');
            $this->exercicio->addAttribute('maxlength','4');            
            $buttons = array(
			new FormButton('btnNew', 'Enviar')
		);
            $this->SetButtons($buttons);
        }            

	function btnNew_click()
	{                                 
		$placa = strtoupper(Form::GetFormValue('placa'));                
                $chass = strtoupper(Form::GetFormValue('chassi'));
                if ( !preg_match("/^[A-Z]{3}[0-9]{4}/" ,$placa) )
		{
			$this->AddError('A placa informada está inválida.');
		}
		elseif ( Form::GetFormValue('tipoVeiculo') == '' )
		{
			$this->AddError('Você deve selecionar um tipo de veículo.');
		}
                elseif ( Form::GetFormValue('renavam') == '' ) 
		{
			$this->AddError('Informe uma cor.');
		}
		elseif ( !preg_match("/^[0-9]{9}/" , Form::GetFormValue('renavam')) )
		{
			$this->AddError('Informe um RENAVAM válido.');
		}
		elseif ( !preg_match("/^[A-Z|0-9]{17}/" , $chass) )
		{
			$this->AddError('Informe o Chassi corretamente.');
		}	
		elseif( preg_match("/\D/", Form::GetFormValue('anoFab')) or  (strlen(Form::GetFormValue('anoFab')) !=4 ) )
		{
			$this->AddError('Informe um ano de fabricação válido.');
		}
		elseif( preg_match("/\D/", Form::GetFormValue('anoMod')) or  (strlen(Form::GetFormValue('anoMod')) !=4 ) )
		{
			$this->AddError('O campo ano modelo está inválido.');
		}		
		elseif( Form::GetFormValue('combustivel') == '')
		{
			$this->AddError('Você deve selecionar um tipo de combustível');
		}
                elseif( preg_match("/\D/", Form::GetFormValue('exercicio')) or  (strlen(Form::GetFormValue('exercicio')) !=4 ) )
		{
			$this->AddError('Informe um exercicio válido.');
		}
                elseif( Form::GetFormValue('uf') == '' )
		{
			$this->AddError('Informe o uf.');
		}
                elseif( Form::GetFormValue('cat') == '')
		{
			$this->AddError('Você deve selecionar a categoria da CRLV');
		}
                elseif( Form::GetFormValue('cnpjcpf') == '' )
		{
			$this->AddError('Informe o CNPJ ou CPF.');
		}
                elseif ( Form::GetFormValue('nome') == '' ) 
		{
			$this->AddError('Informe o nome.');
		}
                elseif( Form::GetFormValue('ativo') == '' )
		{
			$this->AddError('Você deve selecionar se o crlv esta ativo.');
		}
		else{		
//                  $cf = new MCurrencyFormatter();
                    $veiculo = $this->manager->GetBusiness('adm','veiculo');
                    $veiculo->placa = strtoupper(Form::GetFormValue('placa'));
                    $veiculo->idItemPatrimonio = Form::GetFormValue('iditem');                      
                    $veiculo->tipoVeiculo = Form::GetFormValue('tipoVeiculo');
                    $veiculo->cor = Form::GetFormValue('cor');
                    $veiculo->renavam = Form::GetFormValue('renavam');
                    $veiculo->chassis = strtoupper(Form::GetFormValue('chassi'));
                    $veiculo->combustivel = Form::GetFormValue('combustivel');
                    $veiculo->anoFab = Form::GetFormValue('anoFab');
                    $veiculo->anoMod = Form::GetFormValue('anoMod');

                    $veiculocrlv = $this->manager->GetBusiness('adm','veiculocrlv');
                    $veiculocrlv->placa = $veiculo->placa;
                    $veiculocrlv->exercicio = Form::GetFormValue('exercicio');
                    $veiculocrlv->uf = Form::GetFormValue('uf');
                    $veiculocrlv->categoria = Form::GetFormValue('cat');
                    $veiculocrlv->cnpjcpf = Form::GetFormValue('cnpjcpf');
                    $veiculocrlv->nome = Form::GetFormValue('nome');
                    $veiculocrlv->ativo = Form::GetFormValue('ativo');
                    try
                    {
                            $veiculo->save();
                            $veiculocrlv->save();
                            $veiculo->Log(OP_INS,"Novo veículo criado");
                            $go = $this->manager->getActionURL('adm','main:veiculo:new3',  $placa);                          
                            $this->page->redirect($go);
                    }
                    catch (Exception $e)
                    {
                            $this->addError($e->getMessage());
                    }
            }
	} 
}
?>
