<?
class frmVeiculoUoNew extends MForm
{
    protected $objVeiculo;
	
    function __construct($objVeiculo)
    {
        $this->objVeiculo = $objVeiculo;
        parent::__construct('Incluir UO');
        $this->EventHandler();
    }

    function CreateFields()
    {
        
        $fields = array (
            new MHiddenField('iduo'),
            new MLookupTextField('lkpUo','','U.O',50),
        );
        $this->SetFields($fields);
        $this->SetFieldAttr('lkpUo','module','adm');
        $this->SetFieldAttr('lkpUo','item','UoMotoristaVeiculo');
        $this->SetFieldAttr('lkpUo','event','filler');
        $this->SetFieldAttr('lkpUo','related','iduo, lkpUo');
	   
        $buttons = array (
            new FormButton('btnSalvar', 'Incluir')
        );
        $this->SetButtons($buttons);

        $validators = array (
            new MRequiredValidator('lkpUo')
        );
        $this->SetValidators($validators);
    }

    public function btnSalvar_click()
	{
		$idUo = $this->GetFormValue('iduo');

        if( ! isset($idUo) )
        {
            $this->manager->Error('U.O. não informado corretamente.',false);
            return;
        }

        try
		{
            
		
            $objVeiculUO = $this->manager->GetBusiness('adm','veiculouo');
            $objVeiculUO->placa = $this->objVeiculo->placa;
            $objVeiculUO->idUo  = $this->GetFormValue('iduo');
            $msgLog = 'Novo veiculo relacionado à UO';
		
            $objVeiculUO->save();
	    $this->objVeiculo->Log(OP_INS,$msgLog);
            }
		catch (Exception $e)
		{
                        $this->manager->Error("U.O já relacionada: ",$e->getMessage());
		}
	
		$this->SetFieldValue('lkpUo','');
	}

}
?>