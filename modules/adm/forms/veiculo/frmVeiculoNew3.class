<?
class frmVeiculoNew3 extends MForm
{
        
        
	function __construct()
	{                
		parent::__construct('Patrimonio');
		$this->EventHandler();                
	}

	function CreateFields()
	{
            global $MIOLO;    
            
            $placa = $_GET['item'];  
            $veiculo = $this->manager->getBusiness('adm','veiculo', $placa);            
            $objItemPatrimonio = $this->manager->getBusiness('adm','itempatrimonio', $veiculo->idItemPatrimonio);            
            $objNotaFiscal = $this->manager->getBusiness('adm','itempatrimonio', $objItemPatrimonio->idNotaFiscal);            
            $tabelaGeral = $this->manager->getBusiness('common','tabelageral');
            $tipoVeiculo = $tabelaGeral->getByItem('AD_TIPOVEICULO',$veiculo->tipoVeiculo);		 
            $tipoCombustiveis = $tabelaGeral->listByTabela('AD_TIPOCOMBUSTIVEL')->result;
//            $array = array("AC", "AL", "AM", "AP",  "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO");             
            $estados = array("AC"=>"Acre", "AL"=>"Alagoas", "AM"=>"Amazonas", "AP"=>"Amapá","BA"=>"Bahia","CE"=>"Ceará","DF"=>"Distrito Federal","ES"=>"Espírito Santo","GO"=>"Goiás","MA"=>"Maranhão","MT"=>"Mato Grosso","MS"=>"Mato Grosso do Sul","MG"=>"Minas Gerais","PA"=>"Pará","PB"=>"Paraíba","PR"=>"Paraná","PE"=>"Pernambuco","PI"=>"Piauí","RJ"=>"Rio de Janeiro","RN"=>"Rio Grande do Norte","RO"=>"Rondônia","RS"=>"Rio Grande do Sul","RR"=>"Roraima","SC"=>"Santa Catarina","SE"=>"Sergipe","SP"=>"São Paulo","TO"=>"Tocantins");
            $array1 = array('A', 'B', 'C', 'D', 'E');            
            $categoria = array_combine($array1, $array1);
            $ui = $this->manager->getUi();
            $grid = $ui->GetGrid('adm','gridVeiculoCRLV');
            if($veiculo->ativo == 'S')
                   $ativoM = 'SIM';
                else
                    $ativoM = 'NÃO';
                
            $fields = array(                        
                        new TextLabel('iditemtx', $objItemPatrimonio->idItemPatrimonio, 'Id Patrimonio'),
                        new TextLabel('descricao', $objItemPatrimonio->descricao, 'Descrição'),
                        new TextLabel('marcaModelo', $objItemPatrimonio->marcaModelo, 'Marca/Modelo'),
                        new TextLabel('notaFiscal', $objItemPatrimonio->notafiscal, 'Nota Fiscal'),
                        new TextLabel('dataNotaFiscal', $objItemPatrimonio->dataNotaFiscal, 'Data da Nota'),
                        new TextLabel('dataAteste', $objNotaFiscal->dataAteste, 'Data de Ateste'),
                        new TextLabel('cnpj', $objItemPatrimonio->cnpj, 'CNPJ'),
                        new TextLabel('fornecedor', $objNotaFiscal->fornecedor, 'Fornecedor'),
                        new MSpacer(),           
                        new MBox('Veículo'),
                        new MHiddenField('placa2', $placa),
                        new TextLabel('placa', $veiculo->placa,'Placa'),
			new TextLabel('tipoveiculo',$tipoVeiculo->item2,'Tipo de Veículo'),
                        new TextLabel('cor', $veiculo->cor, 'Cor'),                        
			new TextLabel('renavam', $veiculo->renavam,'Renavam'),
			new TextLabel('chassi',$veiculo->chassis,'Chassi'),			
                        new TextLabel('combustivel',$tipoCombustiveis[$veiculo->combustivel][1],'Combustível'),
			new TextLabel('anoFab',$veiculo->anoFab,'Ano Fabricação'),
			new TextLabel('anoMod',$veiculo->anoMod,'Ano Modelo'),
                        new TextLabel('ativoVei',$ativoM,'Ativo'),
                        new MSpacer(),                    
                        new MBox('CRLV'),
                        new MTextField('exercicio','','Exercício','4','Máx. 4 números'),
                        new MSelection('uf', 'BA','UF', $estados),
                        new MSelection('cat', 'B','Categoria', $categoria),
                        new MTextField('cnpjcpf','','CNPJ/CPF', '13','Máx. 18 números'),
                        new MTextField('nome','','Nome', '25'),
                        new MSelection('ativo', 'N', 'Ativo', array('N' => 'Não', 'S' => 'Sim')),
                        $grid,
                
//			new MTextField('capacidade','','Capacidade','10','Máx. 10 números'),			
//			new MCurrencyField('valorKm','','Custo por Km','9','Máx. 9 números'),
//			new MSelection ('idinstituicao','','Instituição'),
		);
                        
            $this->SetFields($fields);
            
            $this->placa->addAttribute('maxlength','7');
            $this->renavam->addAttribute('maxlength','12');
            $this->chassi->addAttribute('maxlength','20');            
            $this->anoFab->addAttribute('maxlength','4');
            $this->anoMod->addAttribute('maxlength','4');
            $this->cor->addAttribute('maxlength','20');
            $this->exercicio->addAttribute('maxlength','4');            
            $this->cnpjcpf->addAttribute('maxlength','18');            
//            $this->modelo->addAttribute('maxlength','30');
//            $this->marca->addAttribute('maxlength','15');
//            $this->capacidade->addAttribute('maxlength','10');
//            $this->valorKm->addAttribute('maxlength','9');            
            $buttons = array(
			new FormButton('btnPost', 'Adicionar CRLV'),
			new FormButton('btnPost2', 'Finalizar'),
		);
            $this->SetButtons($buttons);
        }         
        
        function btnPost_click(){            
                if( preg_match("/\D/", Form::GetFormValue('exercicio')) or  (strlen(Form::GetFormValue('exercicio')) !=4 ) )
		{
			$this->AddError('Informe um exercicio válido.');
		}
                elseif( Form::GetFormValue('uf') == '' )
		{
			$this->AddError('Informe o uf.');
		}
                elseif( Form::GetFormValue('cat') == '')
		{
			$this->AddError('Você deve selecionar a categoria da CRLV');
		}
                elseif( Form::GetFormValue('cnpjcpf') == '' )
		{
			$this->AddError('Informe o CNPJ ou CPF.');
		}
                elseif ( Form::GetFormValue('nome') == '' ) 
		{
			$this->AddError('Informe o nome.');
		}
                elseif( Form::GetFormValue('ativo') == '' )
		{
			$this->AddError('Você deve selecionar se o crlv esta ativo.');
		}
		else{
                    $placa = Form::GetFormValue('placa2');
                    $exercicio = Form::GetFormValue('exercicio');                    
                    $veiculocrlv3 = $this->manager->GetBusiness('adm','veiculocrlv');
                    if($veiculocrlv3->existePlacaExercicio($placa, $exercicio)){
                        $this->AddError("Já existe o exercício ".$exercicio." para esta placa.");
                    }else{                                                        
                        if(Form::GetFormValue('ativo') == 'S'){
                            $veiculocrlv = $this->manager->GetBusiness('adm','veiculocrlv');
                            $idsAtivos = $veiculocrlv->getIdsCrlvAtivo($placa);

                            for($i = 0;$i < count($idsAtivos); $i++){
                                $veiculocrlv->GetById($idsAtivos[$i][0]);
                                $veiculocrlv->ativo = 'N';
                                try
                                {
                                    $veiculocrlv->update();
                                }
                                catch (Exception $e)
                                {
                                $this->addError($e->getMessage());
                                }
                            }
                        }
                        $veiculocrlv2 = $this->manager->GetBusiness('adm','veiculocrlv');
                        $veiculocrlv2->placa = $placa;
                        $veiculocrlv2->exercicio = Form::GetFormValue('exercicio');
                        $veiculocrlv2->uf = Form::GetFormValue('uf');
                        $veiculocrlv2->categoria = Form::GetFormValue('cat');
                        $veiculocrlv2->cnpjcpf = Form::GetFormValue('cnpjcpf');
                        $veiculocrlv2->nome = Form::GetFormValue('nome');
                        $veiculocrlv2->ativo = Form::GetFormValue('ativo');
                        try
                        {                            
                                $veiculocrlv2->save();
    //                            $veiculo->Log(OP_INS,"Novo veículo criado");
    //                            $go = $this->manager->GetActionURL('adm','main:veiculo',$veiculo->placa);
    //                            $this->manager->Information('Veículo criado com sucesso.',$go);]
                                $go = $this->manager->getActionURL('adm','main:veiculo:new3',  $placa);                          
                                $this->page->redirect($go);
                        }
                        catch (Exception $e)
                        {
                                $this->addError($e->getMessage());
                        }
                    }
                }
        }
        
        function btnPost2_click(){ 
            $go = $this->manager->GetActionURL('adm','main:veiculo:find');
            $this->manager->Information('Veículo e CRLVs salvos com sucesso.',$go);
        }
        
}
?>
