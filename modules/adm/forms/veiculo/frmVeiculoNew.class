<?
class frmVeiculoNew extends MForm
{
	function __construct()
	{
		parent::__construct('Incluir Novo Veículo');
		$this->EventHandler();
	}

	function CreateFields()
	{
		global $MIOLO;

		$tabelaGeral = $this->manager->getBusiness('common','tabelageral');
		$tipoVeiculos = $tabelaGeral->listByTabela('AD_TIPOVEICULO')->result;
		$tipoCombustiveis = $tabelaGeral->listByTabela('AD_TIPOCOMBUSTIVEL')->result;
//		$instituicao = $MIOLO->GetBusiness('common','instituicao');
//		$idinstituicao = $this->manager->GetBusiness('common','instituicao');
//		$instituicao = $idinstituicao->listAll();  	                 
                
		$fields = array(
                    
                        new MHiddenField('iditempatrimonio',''),
			new MLookupTextField('lkpItem', '', 'Patrimonio do veículo', 50, NULL, NULL, NULL, 'adm', 'itempatrimonioveiculo'),
//                    
//                        new MTextField('placa','','Placa','7','Máx. 7 caracteres'),
//			new MSelection('tipoVeiculo',1,'Tipo Veiculo',$tipoVeiculos),
//			new MTextField('renavam','','Renavam','12','Máx. 12 caracteres'),
//			new MTextField('chassis','','Chassis','20','Máx. 20 caracteres'),
//			new MTextField('marca','','Marca','15','Máx. 15 caracteres'),
//			new MTextField('modelo','','Modelo','30','Máx. 30 caracteres'),
//			new MTextField('anoFab','','Ano Fabricação','4','Máx. 4 números'),
//			new MTextField('anoMod','','Ano Modelo','4','Máx. 4 números'),
//			new MTextField('capacidade','','Capacidade','10','Máx. 10 números'),
//			new MSelection('combustivel',1,'Combustível',$tipoCombustiveis),
//			new MCurrencyField('valorKm','','Custo por Km','9','Máx. 9 números'),
//			new MSelection ('idinstituicao','','Instituição'),
		);

		$this->SetFields($fields);
//		$this->placa->addAttribute('maxlength','7');
//		$this->renavam->addAttribute('maxlength','12');
//		$this->chassis->addAttribute('maxlength','20');
//		$this->marca->addAttribute('maxlength','15');
//		$this->modelo->addAttribute('maxlength','30');
//		$this->anoFab->addAttribute('maxlength','4');
//		$this->anoMod->addAttribute('maxlength','4');
//		$this->capacidade->addAttribute('maxlength','10');
//		$this->valorKm->addAttribute('maxlength','9');
//                
                $this->SetFieldAttr('lkpItem', 'module', 'adm');
            $this->SetFieldAttr('lkpItem', 'item', 'itempatrimonioveiculo');                
            $this->SetFieldAttr('lkpItem', 'event', 'filler');
            $this->SetFieldAttr('lkpItem', 'related', 'iditempatrimonio,lkpItem');            

		$buttons = array(
			new FormButton('btnPost', 'Próximo')
		);
		$this->SetButtons($buttons);

//		$validators = array(
//			new MRequiredValidator('placa'),
//			new MRequiredValidator('renavam'),
//			new MRequiredValidator('chassis'),
//			new MRequiredValidator('marca'),
//			new MRequiredValidator('modelo'),
//			new MRequiredValidator('anoFab'),
//			new MRequiredValidator('anoMod'),
//			new MIntegerValidator('capacidade','','required'),
//			new MRequiredValidator('valorKm'),
//		);

//                $objinst = $MIOLO->GetBusiness('common','instituicao');
//		$query = $objinst->ListRange(NULL, 'instituicao');
//		while ( !$query->eof() )
//  		{
//			
//			if(($query->fields('ug')!='') or ($query->fields('uasg')!='')){
//			      $options[$query->fields('idinstituicao')] = $query->fields('instituicao');
//			}
//    			$query->moveNext();  
//   		}
//		$this->SetFieldAttr('idinstituicao','options', $options);
//		$this->SetValidators($validators);
	}
        
        function btnPost_click(){            
            global $MIOLO;                      
            if(Form::GetFormValue('iditempatrimonio')){
                $go = $this->manager->getActionURL('adm','main:veiculo:new2',  Form::GetFormValue('iditempatrimonio'));                
                $this->page->redirect($go);
            }else $this->AddError('Escolha um patrimonio.');    
            
//            $tabelaGeral = $this->manager->getBusiness('common','tabelageral');
//            $tipoVeiculos = $tabelaGeral->listByTabela('AD_TIPOVEICULO')->result;
//            $tipoCombustiveis = $tabelaGeral->listByTabela('AD_TIPOCOMBUSTIVEL')->result;
//            $categoria = array('A', 'B', 'C', 'D', 'E');
//            $instituicao = $MIOLO->GetBusiness('common','instituicao');
//            $idinstituicao = $this->manager->GetBusiness('common','instituicao');
//            $instituicao = $idinstituicao->listAll();  
//            $objItemPatrimonio = $this->manager->getBusiness('adm','itempatrimonio', Form::GetFormValue('iditempatrimonio'));            
//            $objNotaFiscal = $this->manager->getBusiness('adm','itempatrimonio', $objItemPatrimonio->idNotaFiscal);            
//                
//            $fields = array(
//                        new MHiddenField('iditem', $objItemPatrimonio->idItemPatrimonio),
//                        new TextLabel('iditemtx', $objItemPatrimonio->idItemPatrimonio, 'Id Item Patrimonio'),
//                        new TextLabel('marcaModelo', $objItemPatrimonio->marcaModelo, 'Marca/Modelo'),
//                        new TextLabel('notaFiscal', $objItemPatrimonio->notafiscal, 'Nota Fiscal'),
//                        new TextLabel('dataNotaFiscal', $objItemPatrimonio->dataNotaFiscal, 'Dara da Nota'),
//                        new TextLabel('dataAteste', $objNotaFiscal->dataAteste, 'Data de Ateste'),
//                        new TextLabel('cnpj', $objItemPatrimonio->cnpj, 'CNPJ'),
//                        new TextLabel('fornecedor', $objNotaFiscal->fornecedor, 'Fornecedor'),
//                        new MSpacer(),           
//                        new MBox('Especificações'),
//                        new MTextField('placa','','Placa','7','Máx. 7 caracteres'),
//			new MSelection('tipoVeiculo',1,'Tipo Veiculo',$tipoVeiculos),
//                        new MTextField('cor', '', 'Cor'),                        
//			new MTextField('renavam','','Renavam','12','Máx. 12 caracteres'),
//			new MTextField('chassi','','Chassi','20','Máx. 20 caracteres'),			
//                        new MSelection('combustivel',1,'Combustível',$tipoCombustiveis),
//			new MTextField('anoFab','','Ano Fabricação','4','Máx. 4 números'),
//			new MTextField('anoMod','','Ano Modelo','4','Máx. 4 números'),
//                        new MSpacer(),      
//                
//                        new MBox('CRLV'),
//                        new MTextField('exercicio','','Exercício', '7'),
//                        new MTextField('uf','','UF', '5'),
//                        new MSelection('cat', '0','Categoria', $categoria),
//                        new MTextField('cnpjcpf','','CNPJ/CPF', '13'),
//                        new MTextField('nome','','Nome', '25'),
//                        new MSelection('ativo', 'N', 'Ativo', array('N' => 'Não', 'S' => 'Sim')),
//                
//                
////			new MTextField('capacidade','','Capacidade','10','Máx. 10 números'),			
////			new MCurrencyField('valorKm','','Custo por Km','9','Máx. 9 números'),
////			new MSelection ('idinstituicao','','Instituição'),
//		);
//                        
//            $this->SetFields($fields);
//            
//            $this->placa->addAttribute('maxlength','7');
//            $this->renavam->addAttribute('maxlength','12');
//            $this->chassis->addAttribute('maxlength','20');
//            $this->marca->addAttribute('maxlength','15');
//            $this->modelo->addAttribute('maxlength','30');
//            $this->anoFab->addAttribute('maxlength','4');
//            $this->anoMod->addAttribute('maxlength','4');
//            $this->capacidade->addAttribute('maxlength','10');
//            $this->valorKm->addAttribute('maxlength','9');
//            $this->setButtonAttr('btnPost', 'visible', FALSE); 
//            $buttons = array(
//			new FormButton('btnNew', 'Enviar')
//		);
//            $this->SetButtons($buttons);
        }

	function btnNew_click()
	{                                 
//		if ( !preg_match("/^[A-Z]{3}[0-9]{4}/" ,$placa) )
//		{
//			$this->AddError('A placa informada está inválida.');
//		}
//		elseif ( Form::GetFormValue('tipoVeiculo') == '' )
//		{
//			$this->AddError('Você deve selecionar um tipo de veículo.');
//		}
//		elseif ( !preg_match("/^[0-9]{9}/" , Form::GetFormValue('renavam')) )
//		{
//			$this->AddError('Informe um RENAVAM válido.');
//		}
//		elseif ( !preg_match("/^[A-Z|0-9]{17}/" , $chassis) )
//		{
//			$this->AddError('Informe o Chassis corretamente.');
//		}
//		elseif( strlen(trim(Form::GetFormValue('marca'))) < 3 )
//		{
//			$this->AddError('Informe corretamente a marca.');
//		}
//		elseif( strlen(trim(Form::GetFormValue('modelo'))) < 3 )
//		{
//			$this->AddError('Informe corretamente o modelo.');
//		}
//		elseif( preg_match("/\D/", Form::GetFormValue('anoFab')) or  (strlen(Form::GetFormValue('anoFab')) !=4 ) )
//		{
//			$this->AddError('Informe um ano de fabricação válido.');
//		}
//		elseif( preg_match("/\D/", Form::GetFormValue('anoMod')) or  (strlen(Form::GetFormValue('anoMod')) !=4 ) )
//		{
//			$this->AddError('O campo ano modelo está inválido.');
//		}
//		elseif( Form::GetFormValue('capacidade') < 2)
//		{
//			$this->AddError('A capacidade do veículo informada é inválida.');
//		}
//		elseif( Form::GetFormValue('combustivel') == '')
//		{
//			$this->AddError('Você deve selecionar um tipo de combustível');
//		}
//		else		
//                $cf = new MCurrencyFormatter();
            $veiculo = $this->manager->GetBusiness('adm','veiculo');
            $veiculo->placa = strtoupper(Form::GetFormValue('placa'));
            $veiculo->idItemPatrimonio = Form::GetFormValue('iditem');                      
            $veiculo->tipo = Form::GetFormValue('tipo');
            $veiculo->cor = Form::GetFormValue('cor');
            $veiculo->renavam = Form::GetFormValue('renavam');
            $veiculo->chassis = strtoupper(Form::GetFormValue('chassi'));
            $veiculo->combustivel = Form::GetFormValue('combustivel');
            $veiculo->anoFab = Form::GetFormValue('anoFab');
            $veiculo->anoMod = Form::GetFormValue('anoMod');

            $veiculocrlv = $this->manager->GetBusiness('adm','veiculocrlv');
            $veiculocrlv->placa = $veiculo->placa;
            $veiculocrlv->exercicio = Form::GetFormValue('exercicio');
            $veiculocrlv->uf = Form::GetFormValue('uf');
            $veiculocrlv->categoria = Form::GetFormValue('cat');
            $veiculocrlv->cnpjcpf = Form::GetFormValue('cnpjcpf');
            $veiculocrlv->nome = Form::GetFormValue('nome');
            $veiculocrlv->ativo = Form::GetFormValue('ativo');
            try
            {
                    $veiculo->save();
                    $veiculocrlv->save();
                    $veiculo->Log(OP_INS,"Novo veículo criado");
                    $go = $this->manager->GetActionURL('adm','main:veiculo',$veiculo->placa);
                    $this->manager->Information('Veículo criado com sucesso.',$go);
            }
            catch (Exception $e)
            {
                    $this->addError($e->getMessage());
            }
		
	} 

}
?>
