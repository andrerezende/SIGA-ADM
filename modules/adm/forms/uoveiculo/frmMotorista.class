<?
/**
 * Form Motorista
 */
class frmMotorista extends CompoundForm
{
    public $oid;
    protected $motorista;
    /**
     * Construtor
     */
    function __construct($objMotorista)
    {
        global $MIOLO;
        $this->motorista = $objMotorista;
        parent::__construct();
        $this->SetClose($MIOLO->GetActionURL('adm','main:motorista:find'));
        $this->SetTitle($this->motorista->ListByMotoristaNome($this->motorista->idMotorista));
        $this->SetIcon($MIOLO->GetUi()->GetImage('adm','default_mini.png'));
    }

    function CreateFields()
    {
        global $MIOLO, $page, $module, $context, $history,$item;

        $motorista = $this->motorista;
        if ($this->oid == NULL) $this->oid = $motorista->idMotorista;

// form
        $ui = $MIOLO->GetUI();
        $form = Form::GetFormValue('form');
        switch ($form)
        {
            case 'editar' : 
                $this->_form[0] = $ui->GetForm($module,'frmMotoristaEditar', $motorista, 'uoveiculo'); 
                break;
            case 'excluir'     : 
                $this->_form[0] = $ui->GetForm($module,'frmMotoristaExcluir', $motorista, 'uoveiculo'); 
                break;
            case 'remover'     : 
                $idu = $this->getFormValue('idu');
                $session = $MIOLO->getSession();
                $itemUo = $session->getValue('itemuom');
                $motoristauo = $this->manager->getBusiness('adm','motoristauo');
                $motoristauo->GetById($item,$itemUo);
                $motoristauo->deleteMotoristauo($itemUo,$motorista->idMotorista);
                $go = $this->manager->GetActionURL('adm','main:uoveiculo',$itemUo);
                $MIOLO->Information("Motorista removido da U.O. com sucesso!.", $go);
                $this->_form[0] = $ui->GetForm($module,'frmMotoristaExcluir', $motorista, 'uoveiculo'); 
                break;
            case 'uo':
                if ( (($idu = $this->getFormValue('idu')) != NULL) && (($iduo = $this->getFormValue('iduo')) != NULL) ){
                     
		       $motorista->DeleteMotorista($idu, $motorista->idMotorista);
		}
				
                $this->_form[0] = $ui->GetForm($module,'frmMotoristaUoNew', $motorista, 'motorista'); 
                $page->SetAction($history->Top('action'));
                array_unshift($this->_form, $ui->GetGrid($module,'gridUoMotorista1', $motorista));
                
                break;
        }
        if ($this->_form[0])
        {
            $this->_form[0]->SetClose($MIOLO->GetActionURL('adm','main:motorista',$uo->idMotorista));
            $page->SetAction($history->Top('action'));
        }
		
// info
        $this->_info[1] = new TextLabel('txtNome',$this->motorista->ListByMotoristaNome($this->motorista->idMotorista),'Nome');
        $this->_info[2] = new TextLabel('txtCarteiraHab',$this->motorista->carteiraHab,'Cart. Habilitação'); 
        $this->_info[3] = new TextLabel('txtCategoria',$this->motorista->categoria,'Categoria'); 
        $this->_info[4] = new TextLabel('txtDataValidade',$this->motorista->dataValidade,'Data de Validade'); 

// panel        
        $action = $context->action;
        $this->_panel[0] = $panel = new ActionPanel('pnlCompound','Opções','',false);
        $panel->AddUserAction('adm_motorista',A_EXECUTE,'Editar',$ui->GetImage('adm','edit.png'),'adm',$action, $this->oid, array("form"=>"editar"));
        //$panel->AddUserAction('adm_motorista',A_EXECUTE,'Excluir',$ui->GetImage('adm','excluir.png'),'adm',$action, $this->oid, array("form"=>"excluir"));
        $panel->AddUserAction('adm_motorista',A_EXECUTE,'Desassociar da U.O.',$ui->GetImage('adm','excluir.png'),'adm',$action, $this->oid, array("form"=>"remover"));
        //$panel->AddUserAction('adm_motorista',A_EXECUTE,'U.O.',$ui->GetImageTheme('','icons/uo.png'),'adm',$action, $this->oid, array("form"=>"uo"));
 	}
}
?>
