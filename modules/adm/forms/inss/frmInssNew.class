<?php
class frmInssNew extends MForm
{
	function __construct()
	{
		parent::__construct('Manutenção de alíquota do INSS');
		$this->EventHandler();
	}

	function CreateFields()
	{
		global $MIOLO;

		$fields = array(
			new MCalendarField('dataIni','','Data de início','10'),
			new MCalendarField('dataFim','','Data fim','10'),
			new MCurrencyField( 'ate', '', 'Valor Máximo','20'),
			new MTextField('percentual','','Percentual','6'),
			new MCurrencyField( 'fixo', '', 'Fixo','20'),
			new MTextField('percPatronal','','Percentual Patronal','6')
		);
		$this->SetFields($fields);

		$buttons = array(
			new MButton('btnNew', 'Incluir alíquota')
		);
		$this->setButtons($buttons);

		$validators = array(
			new MRequiredValidator('dataIni'),
			new MRequiredValidator('dataFim'),
			new MRequiredValidator('percentual'),
			new MRequiredValidator('percPatronal')

		);
		$this->setValidators($validators);
	}

	function btnNew_click()
	{
		global $MIOLO,$page,$module;
		$data = $this->GetData();
		$inss = $MIOLO->GetBusiness('common','inss');
		$inss->SetData($data);
		$cf = new MCurrencyFormatter();
		$inss->ate = $cf->toDecimal($inss->ate);
		$inss->fixo = $cf->toDecimal($inss->fixo);

		if($inss->dataIni > $inss->dataFim)
		{
			$this->AddError('A data Fim deve ser posterior a Data Início.');
		}
		elseif( Form::GetFormValue('percentual') <= 0 )
		{
			$this->AddError('Informe um percentual válido.');
		}
		elseif( Form::GetFormValue('percPatronal') <= 0 )
		{
			$this->AddError('Informe um percentual patronal válido.');
		}
		else
		{
			try
			{
				$inss->save();
				$go = $MIOLO->GetActionURL('adm','main:inss',$inss->idInss);
				$this->manager->Information('Alíquota de INSS criada com sucesso.',$go);
			}
			catch (Exception $e)
			{
				$this->AddError($e->GetMessage());
			}
		}
	}
}
?>