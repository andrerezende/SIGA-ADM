<?
/**
 * Form TipoLicAfast
 */
class frmSetor extends CompoundForm
{
	public $oid;
    protected $setor;
    /**
     * Construtor
     */
    function __construct($objSetor)
    {
        global $MIOLO;
        $this->setor = $objSetor;
        parent::__construct();
        $this->SetClose($MIOLO->GetActionURL('protocolo','main:setor:find'));
        $this->SetTitle($this->setor->sigla);
        $this->SetIcon($MIOLO->GetUi()->GetImage('protocolo','setor_mini.png'));
    }

    function CreateFields()
    {
        $setor = $this->setor;
        if ($this->oid == NULL) $this->oid = $setor->idSetor;

        // form
        $ui = $this->manager->GetUI();
        $form = Form::GetFormValue('form');
        switch ($form)
        {
            case 'acesso':
				$setor->getAcesso();
				if ( ($id = $this->getFormValue('id')) != NULL )
				{
					$setor->deleteAcesso($id);
					$setor->getAcesso();
				}
                $this->_form[0] = $ui->GetGrid('protocolo','gridSetorAcesso', $setor);
			 	$this->_form[1] = $ui->GetForm('protocolo','frmSetorAcesso',$setor,'setor');
                $this->page->setAction($this->manager->GetActionURL('protocolo','main:setor',$setor->idSetor,array('form'=>'acesso')));
            break;
        }
        if ($this->_form[0])
        {
            $this->_form[0]->SetClose($this->manager->GetActionURL('protocolo','main:setor',$setor->sigla));
        }
		
        // info
		$this->_info[0]	= new TextLabel('infoNome',$setor->nome,'Nome');
	} 
}
?>
