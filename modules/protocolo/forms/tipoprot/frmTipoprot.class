<?
MIOLO::Import('modules::protocolo::controls::linktipoprot');

class frmTipoprot extends CompoundForm
{
    public $oid;
    protected $tipoprot;
    
    function __construct($objTipoprot)
    {
        global $MIOLO;
        $this->tipoprot = $objTipoprot;
        parent::__construct();
        $this->SetClose($MIOLO->GetActionURL('protocolo','main:tipoprot:find'));
        $this->SetTitle($this->tipoprot->tipo);
        $this->SetIcon($MIOLO->GetUi()->GetImage('protocolo','setor_mini.png'));
    }

    function CreateFields()
    {
        $tipoprot = $this->tipoprot;
        Util::SetIfNull($this->oid, $tipoprot->idtipoprot);
        $ui = $this->manager->GetUI();

// form
        $form = Form::GetFormValue('form');
        $formClass['dados']       = 'frmTipoprotDados';
        $formClass['excluir']     = 'frmTipoprotDel';
        

	if (isset($formClass[$form]))
        {	
            $this->_form[0] = $f = $ui->GetForm('protocolo',$formClass[$form], $tipoprot, 'tipoprot');
            $f->SetClose($this->manager->GetActionURL('protocolo','main:tipoprot:main',$this->oid));
            $this->page->SetAction($this->manager->history->Top('action'));
        }

        $actionFind = $this->manager->GetActionURL('protocolo','main');
       
	
	if(!$tipoprot->isPersistent())
        {
            $this->manager->Assert(false,'O Tipo Protocolado não existe nos registros. Entre em contato com a equipe de desenvolvimento',$actionFind);
        }


        $action = $this->manager->context->action;
        $this->_panel[0] = $panel = new ActionPanel('pnlCompound','Opções','',false);
        $panel->SetIconType('small');
        
        $panel->InsertUserAction(0,'PROT',A_EXECUTE,'Excluir',
            $ui->GetImage('protocolo','del_mini.png'),'protocolo',$action, $this->oid, array("form"=>"excluir"));
            
        $panel->InsertUserAction(0,'PROT',A_EXECUTE,'Dados do Tipo',
            $ui->GetImage('protocolo','editar_mini.png'),'protocolo',$action, $this->oid, array("form"=>"dados"));
    } 
}
?>
