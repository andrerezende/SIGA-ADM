<?php
class frmTipoManutencao extends CompoundForm
{
    public $oid;
    protected $tipoManutencao;
    function __construct($objTipoManutencao)
    {
        global $MIOLO;
        $this->tipoManutencao = $objTipoManutencao;
        parent::__construct();
        $this->SetClose($MIOLO->GetActionURL('controle','main:tipomanutencao:find'));
        $this->SetTitle($this->tipoManutencao->tipoManutencao);
        $this->SetIcon($MIOLO->GetUi()->GetImage('controle','tools.png'));
    }

    function CreateFields()
    {
        global $MIOLO, $page, $module, $context, $history;

        $tipoManutencao = $this->tipoManutencao;
        if ($this->oid == NULL) $this->oid = $tipoManutencao->idTipoManutencao;

// form
        $ui = $MIOLO->GetUI();
        $form = Form::GetFormValue('form');
        switch ($form)
        {
            case 'dados' : 
				$this->_form[0] = $ui->GetForm($module,'frmTipoManutencaoDados', $tipoManutencao, 'tipomanutencao'); 
                break;
           case 'excluir'     : 
                 $this->_form[0] = $ui->GetForm($module,'frmTipoManutencaoDel', $tipoManutencao, 'tipomanutencao'); 
                 break;
        }
        if ($this->_form[0])
        {
            $this->_form[0]->SetClose($MIOLO->GetActionURL('controle','main:tipomanutencao',$tipoManutencao->idTipoManutencao));
        	$page->SetAction($history->Top('action'));
        }
		

// panel        
        $action = $context->action;
        $this->_panel[0] = $panel = new ActionPanel('pnlCompound','Opções','',false);
        $panel->AddUserAction('',A_EXECUTE,'Editar',$ui->GetImageTheme('','icons/editar.png'),'controle',$action, $this->oid, array("form"=>"dados"));
        $panel->AddUserAction('',A_EXECUTE,'Excluir',$ui->GetImageTheme('','icons/excluir.png'),'controle',$action, $this->oid, array("form"=>"excluir"));

// info
	}
}
?>
